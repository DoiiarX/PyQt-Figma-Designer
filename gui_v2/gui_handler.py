"""
This file was generated by PyQT figma designer
You can edit it but be careful to not overwrite it afterwards.
Each function is connected to a specific event of a specific widget in the GUI.
"""

# imports
from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *
from gui_controller import *


class ViewPyqtFigmaDesignerHandler:
    scale = 1
    scale_min = 0.25
    scale_max = 4

    overwrite_handlers = False

    output_directory = ""
    figma_token = ""
    figma_file_id = ""

    @classmethod
    def window_started(cls):
        ViewPyqtFigmaDesignerController.view_progressbar_progress_1_set_progress(0)
        slider_scale_value = cls.scale / (cls.scale_max - cls.scale_min)
        ViewPyqtFigmaDesignerController.view_slider_scale_1_set_value(slider_scale_value)

    @classmethod
    def view_buttontext_1_clicked(cls):
        print("Button view_buttontext_1 clicked")

    @classmethod
    def view_buttontext_4_clicked(cls):
        print("Button view_buttontext_4 clicked")

    @classmethod
    def view_buttontext_7_clicked(cls):
        print("Button view_buttontext_7 clicked")

    @classmethod
    def view_buttontext_10_clicked(cls):
        print("Button view_buttontext_10 clicked")

    @classmethod
    def view_custom_button_create_project_1_clicked(cls):
        # TODO complete here by calling the runner
        pass

    @classmethod
    def view_buttontext_13_clicked(cls):
        print("Button view_buttontext_13 clicked")

    @classmethod
    def view_buttontext_16_clicked(cls):
        print("Button view_buttontext_16 clicked")

    @classmethod
    def view_buttontext_19_clicked(cls):
        print("Button view_buttontext_19 clicked")

    @classmethod
    def view_buttontext_22_clicked(cls):
        print("Button view_buttontext_22 clicked")

    @classmethod
    def view_custom_button_browse_1_clicked(cls):
        # TODO complete here by opening a file dialog
        file_dialog = QFileDialog()
        file_dialog.setFileMode(QFileDialog.Directory)
        file_dialog.setOption(QFileDialog.ShowDirsOnly, True)
        file_dialog.exec_()
        cls.output_directory = file_dialog.selectedFiles()[0]
        ViewPyqtFigmaDesignerController.view_custom_text_field_directory_1_set_text(cls.output_directory)

    @classmethod
    def view_checkbox_overwrite_handlers_1_check_changed(cls, checked: bool):
        print("Checkbox view_checkbox_overwrite_handlers_1 checked = " + str(checked))

    @classmethod
    def view_slider_scale_1_value_changed(cls, value: float):
        cls.scale = cls.scale_min + (cls.scale_max - cls.scale_min) * value
        ViewPyqtFigmaDesignerController.view_x1_0_set_text(f'x{cls.scale:.2f}')

    @classmethod
    def view_custom_text_field_directory_1_text_changed(cls, text: str):
        print("Text field view_custom_text_field_directory_1_text_changed text changed to text : " + text)

    @classmethod
    def view_custom_text_field_figma_token_1_text_changed(cls, text: str):
        print("Text field view_custom_text_field_figma_token_1_text_changed text changed to text : " + text)

    @classmethod
    def view_custom_text_field_figma_token_4_text_changed(cls, text: str):
        print("Text field view_custom_text_field_figma_token_4_text_changed text changed to text : " + text)
