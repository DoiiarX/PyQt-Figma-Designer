"""
This file was generated by PyQT figma designer
DO NOT EDIT IT. It could cause errors and it is not the way to use this program.
"""
try:
    import gui_controller as GuiController    
except Exception as e:
    print("Exception while importing gui_controller.py")
    print(e)
try : 
    import gui_handler as GuiHandler
except Exception as e:
    print("Exception while importing gui_handler.py")
    print(e)    
try : 
    import strings as Strings
except Exception as e:
    print("Exception while importing strings.py")
    print(e)    
try :
    import components_config as ComponentsConfig
except Exception as e:
    print("Exception while importing components_config.py")
    print(e)
    
from PySide6.QtSvgWidgets import QSvgWidget
from PySide6.QtCore import (QRect,
                            Qt)
from PySide6.QtGui import (QFont)
from PySide6.QtWidgets import (QApplication, QLabel,
                               QLineEdit, QMainWindow, QPushButton, QWidget)



class QWindowPyqtFigmaDesignerGuiV4(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(656.25, 306.75)
        self.pyqt_figma_designer_gui_v4 = QWidget(MainWindow)
        MainWindow.setFixedSize(656.25, 306.75)
        MainWindow.setWindowTitle("PyQt Figma Designer - GUI V4")
        self.pyqt_figma_designer_gui_v4_0 = QWidget(self.pyqt_figma_designer_gui_v4)
        self.pyqt_figma_designer_gui_v4_0.setGeometry(QRect(0, 0, 656, 306))
        self.pyqt_figma_designer_gui_v4_0.setObjectName("pyqt_figma_designer_gui_v4_0")
        
        self.pyqt_figma_designer_gui_v4_1 = QLabel(self.pyqt_figma_designer_gui_v4_0)
        self.pyqt_figma_designer_gui_v4_1.setGeometry(QRect(0, 0, 656, 306))
        self.q_svg_widget_pyqt_figma_designer_gui_v4_1 = QSvgWidget(self.pyqt_figma_designer_gui_v4_1)
        self.q_svg_widget_pyqt_figma_designer_gui_v4_1.setGeometry(QRect(0, 0, 656, 306))
        self.q_svg_widget_pyqt_figma_designer_gui_v4_1.load("svg/file1.svg")
        self.pyqt_figma_designer_gui_v4_2 = QWidget(self.pyqt_figma_designer_gui_v4_0)
        self.pyqt_figma_designer_gui_v4_2.setGeometry(QRect(0, 0, 656, 306))
        self.pyqt_figma_designer_gui_v4_2.setObjectName("pyqt_figma_designer_gui_v4_2")
        self.group_title = QWidget(self.pyqt_figma_designer_gui_v4_2)
        self.group_title.setGeometry(QRect(0, 0, 656, 62))
        self.group_title.setObjectName("group_title")
        self.group_title_0 = QWidget(self.group_title)
        self.group_title_0.setGeometry(QRect(0, 0, 656, 62))
        self.group_title_0.setObjectName("group_title_0")
        self.background = QWidget(self.group_title_0)
        self.background.setGeometry(QRect(0, 0, 656, 62))
        self.background.setObjectName("background")
        
        self.background_0 = QLabel(self.background)
        self.background_0.setGeometry(QRect(0, 0, 656, 62))
        self.q_svg_widget_background_0 = QSvgWidget(self.background_0)
        self.q_svg_widget_background_0.setGeometry(QRect(0, 0, 656, 62))
        self.q_svg_widget_background_0.load("svg/file2.svg")
        self.text = QWidget(self.group_title_0)
        self.text.setGeometry(QRect(75, 14, 268, 33))
        self.text.setObjectName("text")
        self.text_0 = QLabel(self.text)
        self.text_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTitle0Strings.TEXT_TEXT_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(19)
        self.text_0.setFont(font)
        self.text_0.setStyleSheet("color: rgba(37.00000159442425, 37.00000159442425, 37.00000159442425, 255.0)")
        self.text_0.setGeometry(QRect(0, 0, 268, 33))
        self.text_0.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.text_0.setMouseTracking(False)
        self.text_0.setContextMenuPolicy(Qt.NoContextMenu)
        def text_0_set_text(text:str):
            self.text_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTitle0Controller.text_0_set_text = text_0_set_text
        except NameError:
            print("No function text_0_set_text defined. Current text : " + self.text_0.text())
        except Exception as e:
            print("Caught exception while trying to call text_0_set_text : " + str(e))
        self.tabs_view = QWidget(self.pyqt_figma_designer_gui_v4_2)
        self.tabs_view.setGeometry(QRect(0, 62, 656, 244))
        self.tabs_view.setObjectName("tabs_view")
        self.tabs_view_0 = QWidget(self.tabs_view)
        self.tabs_view_0.setGeometry(QRect(0, 0, 656, 244))
        self.tabs_view_0.setObjectName("tabs_view_0")
        self.background_1 = QWidget(self.tabs_view_0)
        self.background_1.setGeometry(QRect(0, 0, 656, 244))
        self.background_1.setObjectName("background_1")
        self.background_2 = QWidget(self.background_1)
        self.background_2.setGeometry(QRect(0, 0, 656, 244))
        self.background_2.setObjectName("background_2")
        self.tab_download = QWidget(self.background_2)
        self.tab_download.setGeometry(QRect(0, 40, 133, 25))
        self.tab_download.setObjectName("tab_download")
        self.tab_download_0 = QWidget(self.tab_download)
        self.tab_download_0.setGeometry(QRect(0, 0, 133, 25))
        self.tab_download_0.setObjectName("tab_download_0")
        self.tab_unchecked = QWidget(self.tab_download_0)
        self.tab_unchecked.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked.setObjectName("tab_unchecked")
        
        self.tab_unchecked_0 = QLabel(self.tab_unchecked)
        self.tab_unchecked_0.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_0 = QSvgWidget(self.tab_unchecked_0)
        self.q_svg_widget_tab_unchecked_0.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_0.load("svg/file3.svg")
        self.tab_unchecked_1 = QWidget(self.tab_unchecked)
        self.tab_unchecked_1.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked_1.setObjectName("tab_unchecked_1")
        self.label = QWidget(self.tab_unchecked_1)
        self.label.setGeometry(QRect(18, 4, 98, 18))
        self.label.setObjectName("label")
        self.label_0 = QLabel(self.label)
        self.label_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.Background2Strings.TabDownload0Strings.TabUnchecked1Strings.TEXT_LABEL_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_0.setFont(font)
        self.label_0.setStyleSheet("color: rgba(17.00000088661909, 17.00000088661909, 17.00000088661909, 255.0)")
        self.label_0.setGeometry(QRect(0, 0, 98, 18))
        self.label_0.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_0.setMouseTracking(False)
        self.label_0.setContextMenuPolicy(Qt.NoContextMenu)
        def label_0_set_text(text:str):
            self.label_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.Background2Controller.TabDownload0Controller.TabUnchecked1Controller.label_0_set_text = label_0_set_text
        except NameError:
            print("No function label_0_set_text defined. Current text : " + self.label_0.text())
        except Exception as e:
            print("Caught exception while trying to call label_0_set_text : " + str(e))
        self._24px_progresscircle25 = QWidget(self.tab_unchecked_1)
        self._24px_progresscircle25.setGeometry(QRect(110, 3, 18, 18))
        self._24px_progresscircle25.setObjectName("_24px_progresscircle25")
        self._24px_copy = QWidget(self.tab_unchecked_1)
        self._24px_copy.setGeometry(QRect(89, 3, 18, 18))
        self._24px_copy.setObjectName("_24px_copy")
        self.rectangle = QWidget(self.tab_unchecked_1)
        self.rectangle.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle.setObjectName("rectangle")
        
        self.rectangle_0 = QLabel(self.rectangle)
        self.rectangle_0.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_0 = QSvgWidget(self.rectangle_0)
        self.q_svg_widget_rectangle_0.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_0.load("svg/file4.svg")
        self.tab_run = QWidget(self.background_2)
        self.tab_run.setGeometry(QRect(0, 107, 133, 25))
        self.tab_run.setObjectName("tab_run")
        self.tab_run_0 = QWidget(self.tab_run)
        self.tab_run_0.setGeometry(QRect(0, 0, 133, 25))
        self.tab_run_0.setObjectName("tab_run_0")
        self.tab_unchecked_2 = QWidget(self.tab_run_0)
        self.tab_unchecked_2.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked_2.setObjectName("tab_unchecked_2")
        
        self.tab_unchecked_3 = QLabel(self.tab_unchecked_2)
        self.tab_unchecked_3.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_3 = QSvgWidget(self.tab_unchecked_3)
        self.q_svg_widget_tab_unchecked_3.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_3.load("svg/file5.svg")
        self.tab_unchecked_4 = QWidget(self.tab_unchecked_2)
        self.tab_unchecked_4.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked_4.setObjectName("tab_unchecked_4")
        self.label_1 = QWidget(self.tab_unchecked_4)
        self.label_1.setGeometry(QRect(18, 4, 98, 18))
        self.label_1.setObjectName("label_1")
        self.label_2 = QLabel(self.label_1)
        self.label_2.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.Background2Strings.TabRun0Strings.TabUnchecked4Strings.TEXT_LABEL_2)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color: rgba(17.00000088661909, 17.00000088661909, 17.00000088661909, 255.0)")
        self.label_2.setGeometry(QRect(0, 0, 98, 18))
        self.label_2.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_2.setMouseTracking(False)
        self.label_2.setContextMenuPolicy(Qt.NoContextMenu)
        def label_2_set_text(text:str):
            self.label_2.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.Background2Controller.TabRun0Controller.TabUnchecked4Controller.label_2_set_text = label_2_set_text
        except NameError:
            print("No function label_2_set_text defined. Current text : " + self.label_2.text())
        except Exception as e:
            print("Caught exception while trying to call label_2_set_text : " + str(e))
        self._24px_progresscircle25_0 = QWidget(self.tab_unchecked_4)
        self._24px_progresscircle25_0.setGeometry(QRect(110, 3, 18, 18))
        self._24px_progresscircle25_0.setObjectName("_24px_progresscircle25_0")
        self._24px_copy_0 = QWidget(self.tab_unchecked_4)
        self._24px_copy_0.setGeometry(QRect(89, 3, 18, 18))
        self._24px_copy_0.setObjectName("_24px_copy_0")
        self.rectangle_1 = QWidget(self.tab_unchecked_4)
        self.rectangle_1.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle_1.setObjectName("rectangle_1")
        
        self.rectangle_2 = QLabel(self.rectangle_1)
        self.rectangle_2.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_2 = QSvgWidget(self.rectangle_2)
        self.q_svg_widget_rectangle_2.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_2.load("svg/file6.svg")
        self.tab_compile = QWidget(self.background_2)
        self.tab_compile.setGeometry(QRect(0, 73, 133, 25))
        self.tab_compile.setObjectName("tab_compile")
        self.tab_compile_0 = QWidget(self.tab_compile)
        self.tab_compile_0.setGeometry(QRect(0, 0, 133, 25))
        self.tab_compile_0.setObjectName("tab_compile_0")
        self.tab_unchecked_5 = QWidget(self.tab_compile_0)
        self.tab_unchecked_5.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked_5.setObjectName("tab_unchecked_5")
        
        self.tab_unchecked_6 = QLabel(self.tab_unchecked_5)
        self.tab_unchecked_6.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_6 = QSvgWidget(self.tab_unchecked_6)
        self.q_svg_widget_tab_unchecked_6.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_6.load("svg/file7.svg")
        self.tab_unchecked_7 = QWidget(self.tab_unchecked_5)
        self.tab_unchecked_7.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked_7.setObjectName("tab_unchecked_7")
        self.label_3 = QWidget(self.tab_unchecked_7)
        self.label_3.setGeometry(QRect(18, 4, 98, 18))
        self.label_3.setObjectName("label_3")
        self.label_4 = QLabel(self.label_3)
        self.label_4.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.Background2Strings.TabCompile0Strings.TabUnchecked7Strings.TEXT_LABEL_4)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgba(17.00000088661909, 17.00000088661909, 17.00000088661909, 255.0)")
        self.label_4.setGeometry(QRect(0, 0, 98, 18))
        self.label_4.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_4.setMouseTracking(False)
        self.label_4.setContextMenuPolicy(Qt.NoContextMenu)
        def label_4_set_text(text:str):
            self.label_4.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.Background2Controller.TabCompile0Controller.TabUnchecked7Controller.label_4_set_text = label_4_set_text
        except NameError:
            print("No function label_4_set_text defined. Current text : " + self.label_4.text())
        except Exception as e:
            print("Caught exception while trying to call label_4_set_text : " + str(e))
        self._24px_progresscircle25_1 = QWidget(self.tab_unchecked_7)
        self._24px_progresscircle25_1.setGeometry(QRect(110, 3, 18, 18))
        self._24px_progresscircle25_1.setObjectName("_24px_progresscircle25_1")
        self._24px_copy_1 = QWidget(self.tab_unchecked_7)
        self._24px_copy_1.setGeometry(QRect(89, 3, 18, 18))
        self._24px_copy_1.setObjectName("_24px_copy_1")
        self.rectangle_3 = QWidget(self.tab_unchecked_7)
        self.rectangle_3.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle_3.setObjectName("rectangle_3")
        
        self.rectangle_4 = QLabel(self.rectangle_3)
        self.rectangle_4.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_4 = QSvgWidget(self.rectangle_4)
        self.q_svg_widget_rectangle_4.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_4.load("svg/file8.svg")
        self.tab_create_project = QWidget(self.background_2)
        self.tab_create_project.setGeometry(QRect(0, 8, 133, 25))
        self.tab_create_project.setObjectName("tab_create_project")
        self.tab_create_project_0 = QWidget(self.tab_create_project)
        self.tab_create_project_0.setGeometry(QRect(0, 0, 133, 25))
        self.tab_create_project_0.setObjectName("tab_create_project_0")
        self.tab_unchecked_8 = QWidget(self.tab_create_project_0)
        self.tab_unchecked_8.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked_8.setObjectName("tab_unchecked_8")
        
        self.tab_unchecked_9 = QLabel(self.tab_unchecked_8)
        self.tab_unchecked_9.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_9 = QSvgWidget(self.tab_unchecked_9)
        self.q_svg_widget_tab_unchecked_9.setGeometry(QRect(0, 0, 133, 25))
        self.q_svg_widget_tab_unchecked_9.load("svg/file9.svg")
        self.tab_unchecked_10 = QWidget(self.tab_unchecked_8)
        self.tab_unchecked_10.setGeometry(QRect(0, 0, 133, 25))
        self.tab_unchecked_10.setObjectName("tab_unchecked_10")
        self.label_5 = QWidget(self.tab_unchecked_10)
        self.label_5.setGeometry(QRect(18, 4, 98, 18))
        self.label_5.setObjectName("label_5")
        self.label_6 = QLabel(self.label_5)
        self.label_6.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.Background2Strings.TabCreateProject0Strings.TabUnchecked10Strings.TEXT_LABEL_6)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("color: rgba(17.00000088661909, 17.00000088661909, 17.00000088661909, 255.0)")
        self.label_6.setGeometry(QRect(0, 0, 98, 18))
        self.label_6.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_6.setMouseTracking(False)
        self.label_6.setContextMenuPolicy(Qt.NoContextMenu)
        def label_6_set_text(text:str):
            self.label_6.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.Background2Controller.TabCreateProject0Controller.TabUnchecked10Controller.label_6_set_text = label_6_set_text
        except NameError:
            print("No function label_6_set_text defined. Current text : " + self.label_6.text())
        except Exception as e:
            print("Caught exception while trying to call label_6_set_text : " + str(e))
        self._24px_progresscircle25_2 = QWidget(self.tab_unchecked_10)
        self._24px_progresscircle25_2.setGeometry(QRect(110, 3, 18, 18))
        self._24px_progresscircle25_2.setObjectName("_24px_progresscircle25_2")
        self._24px_copy_2 = QWidget(self.tab_unchecked_10)
        self._24px_copy_2.setGeometry(QRect(89, 3, 18, 18))
        self._24px_copy_2.setObjectName("_24px_copy_2")
        self.rectangle_5 = QWidget(self.tab_unchecked_10)
        self.rectangle_5.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle_5.setObjectName("rectangle_5")
        
        self.rectangle_6 = QLabel(self.rectangle_5)
        self.rectangle_6.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_6 = QSvgWidget(self.rectangle_6)
        self.q_svg_widget_rectangle_6.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_6.load("svg/file10.svg")
        self.rectangle_9 = QWidget(self.background_2)
        self.rectangle_9.setGeometry(QRect(133, 0, 522, 244))
        self.rectangle_9.setObjectName("rectangle_9")
        
        self.rectangle_9_0 = QLabel(self.rectangle_9)
        self.rectangle_9_0.setGeometry(QRect(0, 0, 522, 244))
        self.q_svg_widget_rectangle_9_0 = QSvgWidget(self.rectangle_9_0)
        self.q_svg_widget_rectangle_9_0.setGeometry(QRect(0, 0, 522, 244))
        self.q_svg_widget_rectangle_9_0.load("svg/file11.svg")
        self.tabs_content = QWidget(self.tabs_view_0)
        self.tabs_content.setGeometry(QRect(168, 57, 465, 171))
        self.tabs_content.setObjectName("tabs_content")
        self.tabs_content_0 = QWidget(self.tabs_content)
        self.tabs_content_0.setGeometry(QRect(0, 0, 465, 171))
        self.tabs_content_0.setObjectName("tabs_content_0")
        self.run = QWidget(self.tabs_content_0)
        self.run.setGeometry(QRect(157, 135, 177, 36))
        self.run.setObjectName("run")
        self.run_0 = QWidget(self.run)
        self.run_0.setGeometry(QRect(0, 0, 177, 36))
        self.run_0.setObjectName("run_0")
        self.custom_button_run = QWidget(self.run_0)
        self.custom_button_run.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_run.setObjectName("custom_button_run")
        self.custom_button_run_0 = QWidget(self.custom_button_run)
        self.custom_button_run_0.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_run_0.setObjectName("custom_button_run_0")
        self.normal = QWidget(self.custom_button_run_0)
        self.normal.setGeometry(QRect(0, 0, 177, 36))
        self.normal.setObjectName("normal")
        
        self.normal_0 = QLabel(self.normal)
        self.normal_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_0 = QSvgWidget(self.normal_0)
        self.q_svg_widget_normal_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_0.load("svg/file12.svg")
        self.normal_1 = QWidget(self.normal)
        self.normal_1.setGeometry(QRect(0, 0, 177, 36))
        self.normal_1.setObjectName("normal_1")
        self.text_1 = QWidget(self.normal_1)
        self.text_1.setGeometry(QRect(78, 11, 21, 13))
        self.text_1.setObjectName("text_1")
        self.text_2 = QLabel(self.text_1)
        self.text_2.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Run0Strings.CustomButtonRun0Strings.Normal1Strings.TEXT_TEXT_2)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_2.setFont(font)
        self.text_2.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_2.setGeometry(QRect(0, 0, 21, 13))
        self.text_2.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_2.setMouseTracking(False)
        self.text_2.setContextMenuPolicy(Qt.NoContextMenu)
        def text_2_set_text(text:str):
            self.text_2.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.CustomButtonRun0Controller.Normal1Controller.text_2_set_text = text_2_set_text
        except NameError:
            print("No function text_2_set_text defined. Current text : " + self.text_2.text())
        except Exception as e:
            print("Caught exception while trying to call text_2_set_text : " + str(e))
        self.disabled = QWidget(self.custom_button_run_0)
        self.disabled.setGeometry(QRect(0, 0, 177, 36))
        self.disabled.setObjectName("disabled")
        
        self.disabled_0 = QLabel(self.disabled)
        self.disabled_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_0 = QSvgWidget(self.disabled_0)
        self.q_svg_widget_disabled_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_0.load("svg/file13.svg")
        self.disabled_1 = QWidget(self.disabled)
        self.disabled_1.setGeometry(QRect(0, 0, 177, 36))
        self.disabled_1.setObjectName("disabled_1")
        self.text_3 = QWidget(self.disabled_1)
        self.text_3.setGeometry(QRect(78, 11, 21, 13))
        self.text_3.setObjectName("text_3")
        self.text_4 = QLabel(self.text_3)
        self.text_4.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Run0Strings.CustomButtonRun0Strings.Disabled1Strings.TEXT_TEXT_4)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_4.setFont(font)
        self.text_4.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_4.setGeometry(QRect(0, 0, 21, 13))
        self.text_4.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_4.setMouseTracking(False)
        self.text_4.setContextMenuPolicy(Qt.NoContextMenu)
        def text_4_set_text(text:str):
            self.text_4.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.CustomButtonRun0Controller.Disabled1Controller.text_4_set_text = text_4_set_text
        except NameError:
            print("No function text_4_set_text defined. Current text : " + self.text_4.text())
        except Exception as e:
            print("Caught exception while trying to call text_4_set_text : " + str(e))
        self.pressed = QWidget(self.custom_button_run_0)
        self.pressed.setGeometry(QRect(0, 0, 177, 36))
        self.pressed.setObjectName("pressed")
        
        self.pressed_0 = QLabel(self.pressed)
        self.pressed_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_0 = QSvgWidget(self.pressed_0)
        self.q_svg_widget_pressed_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_0.load("svg/file14.svg")
        self.pressed_1 = QWidget(self.pressed)
        self.pressed_1.setGeometry(QRect(0, 0, 177, 36))
        self.pressed_1.setObjectName("pressed_1")
        self.text_5 = QWidget(self.pressed_1)
        self.text_5.setGeometry(QRect(78, 11, 21, 13))
        self.text_5.setObjectName("text_5")
        self.text_6 = QLabel(self.text_5)
        self.text_6.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Run0Strings.CustomButtonRun0Strings.Pressed1Strings.TEXT_TEXT_6)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_6.setFont(font)
        self.text_6.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_6.setGeometry(QRect(0, 0, 21, 13))
        self.text_6.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_6.setMouseTracking(False)
        self.text_6.setContextMenuPolicy(Qt.NoContextMenu)
        def text_6_set_text(text:str):
            self.text_6.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.CustomButtonRun0Controller.Pressed1Controller.text_6_set_text = text_6_set_text
        except NameError:
            print("No function text_6_set_text defined. Current text : " + self.text_6.text())
        except Exception as e:
            print("Caught exception while trying to call text_6_set_text : " + str(e))
        self.mouse_over = QWidget(self.custom_button_run_0)
        self.mouse_over.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over.setObjectName("mouse_over")
        
        self.mouse_over_0 = QLabel(self.mouse_over)
        self.mouse_over_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_0 = QSvgWidget(self.mouse_over_0)
        self.q_svg_widget_mouse_over_0.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_0.load("svg/file15.svg")
        self.mouse_over_1 = QWidget(self.mouse_over)
        self.mouse_over_1.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over_1.setObjectName("mouse_over_1")
        self.text_7 = QWidget(self.mouse_over_1)
        self.text_7.setGeometry(QRect(78, 11, 21, 13))
        self.text_7.setObjectName("text_7")
        self.text_8 = QLabel(self.text_7)
        self.text_8.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Run0Strings.CustomButtonRun0Strings.MouseOver1Strings.TEXT_TEXT_8)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_8.setFont(font)
        self.text_8.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_8.setGeometry(QRect(0, 0, 21, 13))
        self.text_8.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_8.setMouseTracking(False)
        self.text_8.setContextMenuPolicy(Qt.NoContextMenu)
        def text_8_set_text(text:str):
            self.text_8.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.CustomButtonRun0Controller.MouseOver1Controller.text_8_set_text = text_8_set_text
        except NameError:
            print("No function text_8_set_text defined. Current text : " + self.text_8.text())
        except Exception as e:
            print("Caught exception while trying to call text_8_set_text : " + str(e))
        
        self.custom_button_run_1 = QPushButton(self.custom_button_run)
        self.custom_button_run_1.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_run_1.setFlat(True)
        self.custom_button_run_1.setAutoFillBackground(False)
        self.custom_button_run_1.setObjectName("custom_button_run_1")
        self.custom_button_run_1.setMouseTracking(True)
        self.custom_button_run_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_button_run_1.setAcceptDrops(False)
        self.custom_button_run_1.setFocusPolicy(Qt.NoFocus)
        self.custom_button_run_1_enabled = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Run0Config.CustomButtonRun1Config.enabled
        def __custom_button_run_1_mouse_over(*args, **kwargs):
            if self.custom_button_run_1_enabled :
                self.mouse_over.setVisible(True)
                self.pressed.setVisible(False)
                self.disabled.setVisible(False)
        def __custom_button_run_1_mouse_leave(*args, **kwargs):
            if self.custom_button_run_1_enabled :
                self.mouse_over.setVisible(False)
                self.pressed.setVisible(False)
                self.disabled.setVisible(False)
        def __custom_button_run_1_mouse_press(*args, **kwargs):
            if self.custom_button_run_1_enabled :
                self.mouse_over.setVisible(False)
                self.pressed.setVisible(True)
                self.disabled.setVisible(False)
        def __custom_button_run_1_mouse_release(*args, **kwargs):
            if self.custom_button_run_1_enabled :
                self.mouse_over.setVisible(True)
                self.pressed.setVisible(False)
                self.disabled.setVisible(False)
                self.custom_button_run_1.clicked.emit()
        def __custom_button_run_1_disable(*args, **kwargs):
            self.custom_button_run_1_enabled = False
            self.mouse_over.setVisible(False)
            self.pressed.setVisible(False)
            self.disabled.setVisible(True)
            self.custom_button_run_1.setMouseTracking(False)
            self.custom_button_run_1.setFocusPolicy(Qt.NoFocus)
            self.custom_button_run_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        def __custom_button_run_1_enable(*args, **kwargs):
            self.custom_button_run_1_enabled = True
            self.mouse_over.setVisible(False)
            self.pressed.setVisible(False)
            self.disabled.setVisible(False)
            self.custom_button_run_1.setMouseTracking(True)
        
        def __custom_button_run_1_clicked(*args, **kwargs):
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Run0Handler.custom_button_run_1_clicked()
            except NameError:
                print("No function custom_button_run_1_clicked defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Run0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Run0Handler.custom_button_run_1_clicked : " + str(e))
        
        self.custom_button_run_1.clicked.connect(__custom_button_run_1_clicked)
        self.custom_button_run_1.enterEvent = __custom_button_run_1_mouse_over
        self.custom_button_run_1.leaveEvent = __custom_button_run_1_mouse_leave
        self.custom_button_run_1.mousePressEvent = __custom_button_run_1_mouse_press
        self.custom_button_run_1.mouseReleaseEvent = __custom_button_run_1_mouse_release
        self.custom_button_run_1.disable = __custom_button_run_1_disable
        self.custom_button_run_1.enable = __custom_button_run_1_enable
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.custom_button_run_1_enable = __custom_button_run_1_enable
        except NameError:
            print("No function custom_button_run_1_enable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.custom_button_run_1_enable : " + str(e))
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.custom_button_run_1_disable = __custom_button_run_1_disable
        except NameError:
            print("No function custom_button_run_1_disable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Run0Controller.custom_button_run_1_disable : " + str(e))
        self.mouse_over.setVisible(False)
        self.pressed.setVisible(False)
        self.disabled.setVisible(False)
        self.compile = QWidget(self.tabs_content_0)
        self.compile.setGeometry(QRect(0, 2, 465, 169))
        self.compile.setObjectName("compile")
        self.compile_0 = QWidget(self.compile)
        self.compile_0.setGeometry(QRect(0, 0, 465, 169))
        self.compile_0.setObjectName("compile_0")
        self.checkbox_overwrite_handlers = QWidget(self.compile_0)
        self.checkbox_overwrite_handlers.setGeometry(QRect(0, 10, 171, 21))
        self.checkbox_overwrite_handlers.setObjectName("checkbox_overwrite_handlers")
        self.checkbox_overwrite_handlers_0 = QWidget(self.checkbox_overwrite_handlers)
        self.checkbox_overwrite_handlers_0.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_overwrite_handlers_0.setObjectName("checkbox_overwrite_handlers_0")
        self.overwrite_handlers = QWidget(self.checkbox_overwrite_handlers_0)
        self.overwrite_handlers.setGeometry(QRect(30, 3, 140, 13))
        self.overwrite_handlers.setObjectName("overwrite_handlers")
        self.overwrite_handlers_0 = QLabel(self.overwrite_handlers)
        self.overwrite_handlers_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.CheckboxOverwriteHandlers0Strings.TEXT_OVERWRITE_HANDLERS_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.overwrite_handlers_0.setFont(font)
        self.overwrite_handlers_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.overwrite_handlers_0.setGeometry(QRect(0, 0, 140, 13))
        self.overwrite_handlers_0.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.overwrite_handlers_0.setMouseTracking(False)
        self.overwrite_handlers_0.setContextMenuPolicy(Qt.NoContextMenu)
        def overwrite_handlers_0_set_text(text:str):
            self.overwrite_handlers_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.CheckboxOverwriteHandlers0Controller.overwrite_handlers_0_set_text = overwrite_handlers_0_set_text
        except NameError:
            print("No function overwrite_handlers_0_set_text defined. Current text : " + self.overwrite_handlers_0.text())
        except Exception as e:
            print("Caught exception while trying to call overwrite_handlers_0_set_text : " + str(e))
        self.rectangle_31 = QWidget(self.checkbox_overwrite_handlers_0)
        self.rectangle_31.setGeometry(QRect(0, 0, 21, 21))
        self.rectangle_31.setObjectName("rectangle_31")
        
        self.rectangle_31_0 = QLabel(self.rectangle_31)
        self.rectangle_31_0.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_0 = QSvgWidget(self.rectangle_31_0)
        self.q_svg_widget_rectangle_31_0.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_0.load("svg/file16.svg")
        self.checked = QWidget(self.checkbox_overwrite_handlers_0)
        self.checked.setGeometry(QRect(3, 3, 13, 13))
        self.checked.setObjectName("checked")
        
        self.checked_0 = QLabel(self.checked)
        self.checked_0.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_0 = QSvgWidget(self.checked_0)
        self.q_svg_widget_checked_0.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_0.load("svg/file17.svg")
        self.checked_1 = QWidget(self.checked)
        self.checked_1.setGeometry(QRect(0, 0, 13, 13))
        self.checked_1.setObjectName("checked_1")
        self.path_5_copy_10 = QWidget(self.checked_1)
        self.path_5_copy_10.setGeometry(QRect(2, 2, 9, 9))
        self.path_5_copy_10.setObjectName("path_5_copy_10")
        
        self.path_5_copy_10_0 = QLabel(self.path_5_copy_10)
        self.path_5_copy_10_0.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_0 = QSvgWidget(self.path_5_copy_10_0)
        self.q_svg_widget_path_5_copy_10_0.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_0.load("svg/file18.svg")
        
        self.checkbox_overwrite_handlers_1_checked = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.CheckboxOverwriteHandlers1Config.default_checked
        self.checkbox_overwrite_handlers_1 = QPushButton(self.checkbox_overwrite_handlers)
        self.checkbox_overwrite_handlers_1.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_overwrite_handlers_1.setFlat(True)
        self.checkbox_overwrite_handlers_1.setAutoFillBackground(False)
        self.checkbox_overwrite_handlers_1.setObjectName("checkbox_overwrite_handlers_1")
        self.checkbox_overwrite_handlers_1.setMouseTracking(True)
        self.checkbox_overwrite_handlers_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.checkbox_overwrite_handlers_1.setAcceptDrops(False)
        self.checkbox_overwrite_handlers_1.setFocusPolicy(Qt.NoFocus)
        self.checkbox_overwrite_handlers_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.checkbox_overwrite_handlers_1.setEnabled(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.CheckboxOverwriteHandlers1Config.enabled)
        def __checkbox_overwrite_handlers_1_check_changed():
            self.checkbox_overwrite_handlers_1_checked = not self.checkbox_overwrite_handlers_1_checked
            self.checked.setVisible(self.checkbox_overwrite_handlers_1_checked)
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.checkbox_overwrite_handlers_1_check_changed(self.checkbox_overwrite_handlers_1_checked)
            except NameError:
                print("No function checkbox_overwrite_handlers_1_check_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.checkbox_overwrite_handlers_1_check_changed : " + str(e))
        
        def __checkbox_overwrite_handlers_1_set_checked(checked:bool):
            self.checkbox_overwrite_handlers_1_checked = checked
            self.checked.setVisible(self.checkbox_overwrite_handlers_1_checked)
        self.checkbox_overwrite_handlers_1.clicked.connect(__checkbox_overwrite_handlers_1_check_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.checkbox_overwrite_handlers_1_set_checked = __checkbox_overwrite_handlers_1_set_checked
        except NameError:
            print("No function checkbox_overwrite_handlers_1_set_checked defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.checkbox_overwrite_handlers_1_set_checked : " + str(e))
        self.checked.setVisible(self.checkbox_overwrite_handlers_1_checked)
        self.checkbox_overwrite_config = QWidget(self.compile_0)
        self.checkbox_overwrite_config.setGeometry(QRect(0, 37, 171, 21))
        self.checkbox_overwrite_config.setObjectName("checkbox_overwrite_config")
        self.checkbox_overwrite_config_0 = QWidget(self.checkbox_overwrite_config)
        self.checkbox_overwrite_config_0.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_overwrite_config_0.setObjectName("checkbox_overwrite_config_0")
        self.overwrite_styles = QWidget(self.checkbox_overwrite_config_0)
        self.overwrite_styles.setGeometry(QRect(30, 3, 140, 13))
        self.overwrite_styles.setObjectName("overwrite_styles")
        self.overwrite_styles_0 = QLabel(self.overwrite_styles)
        self.overwrite_styles_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.CheckboxOverwriteConfig0Strings.TEXT_OVERWRITE_STYLES_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.overwrite_styles_0.setFont(font)
        self.overwrite_styles_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.overwrite_styles_0.setGeometry(QRect(0, 0, 140, 13))
        self.overwrite_styles_0.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.overwrite_styles_0.setMouseTracking(False)
        self.overwrite_styles_0.setContextMenuPolicy(Qt.NoContextMenu)
        def overwrite_styles_0_set_text(text:str):
            self.overwrite_styles_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.CheckboxOverwriteConfig0Controller.overwrite_styles_0_set_text = overwrite_styles_0_set_text
        except NameError:
            print("No function overwrite_styles_0_set_text defined. Current text : " + self.overwrite_styles_0.text())
        except Exception as e:
            print("Caught exception while trying to call overwrite_styles_0_set_text : " + str(e))
        self.rectangle_31_1 = QWidget(self.checkbox_overwrite_config_0)
        self.rectangle_31_1.setGeometry(QRect(0, 0, 21, 21))
        self.rectangle_31_1.setObjectName("rectangle_31_1")
        
        self.rectangle_31_2 = QLabel(self.rectangle_31_1)
        self.rectangle_31_2.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_2 = QSvgWidget(self.rectangle_31_2)
        self.q_svg_widget_rectangle_31_2.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_2.load("svg/file19.svg")
        self.checked_2 = QWidget(self.checkbox_overwrite_config_0)
        self.checked_2.setGeometry(QRect(3, 3, 13, 13))
        self.checked_2.setObjectName("checked_2")
        
        self.checked_3 = QLabel(self.checked_2)
        self.checked_3.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_3 = QSvgWidget(self.checked_3)
        self.q_svg_widget_checked_3.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_3.load("svg/file20.svg")
        self.checked_4 = QWidget(self.checked_2)
        self.checked_4.setGeometry(QRect(0, 0, 13, 13))
        self.checked_4.setObjectName("checked_4")
        self.path_5_copy_10_1 = QWidget(self.checked_4)
        self.path_5_copy_10_1.setGeometry(QRect(2, 2, 9, 9))
        self.path_5_copy_10_1.setObjectName("path_5_copy_10_1")
        
        self.path_5_copy_10_2 = QLabel(self.path_5_copy_10_1)
        self.path_5_copy_10_2.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_2 = QSvgWidget(self.path_5_copy_10_2)
        self.q_svg_widget_path_5_copy_10_2.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_2.load("svg/file21.svg")
        
        self.checkbox_overwrite_config_1_checked = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.CheckboxOverwriteConfig1Config.default_checked
        self.checkbox_overwrite_config_1 = QPushButton(self.checkbox_overwrite_config)
        self.checkbox_overwrite_config_1.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_overwrite_config_1.setFlat(True)
        self.checkbox_overwrite_config_1.setAutoFillBackground(False)
        self.checkbox_overwrite_config_1.setObjectName("checkbox_overwrite_config_1")
        self.checkbox_overwrite_config_1.setMouseTracking(True)
        self.checkbox_overwrite_config_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.checkbox_overwrite_config_1.setAcceptDrops(False)
        self.checkbox_overwrite_config_1.setFocusPolicy(Qt.NoFocus)
        self.checkbox_overwrite_config_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.checkbox_overwrite_config_1.setEnabled(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.CheckboxOverwriteConfig1Config.enabled)
        def __checkbox_overwrite_config_1_check_changed():
            self.checkbox_overwrite_config_1_checked = not self.checkbox_overwrite_config_1_checked
            self.checked_2.setVisible(self.checkbox_overwrite_config_1_checked)
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.checkbox_overwrite_config_1_check_changed(self.checkbox_overwrite_config_1_checked)
            except NameError:
                print("No function checkbox_overwrite_config_1_check_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.checkbox_overwrite_config_1_check_changed : " + str(e))
        
        def __checkbox_overwrite_config_1_set_checked(checked:bool):
            self.checkbox_overwrite_config_1_checked = checked
            self.checked_2.setVisible(self.checkbox_overwrite_config_1_checked)
        self.checkbox_overwrite_config_1.clicked.connect(__checkbox_overwrite_config_1_check_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.checkbox_overwrite_config_1_set_checked = __checkbox_overwrite_config_1_set_checked
        except NameError:
            print("No function checkbox_overwrite_config_1_set_checked defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.checkbox_overwrite_config_1_set_checked : " + str(e))
        self.checked_2.setVisible(self.checkbox_overwrite_config_1_checked)
        self.checkbox_overwrite_strings = QWidget(self.compile_0)
        self.checkbox_overwrite_strings.setGeometry(QRect(0, 63, 171, 21))
        self.checkbox_overwrite_strings.setObjectName("checkbox_overwrite_strings")
        self.checkbox_overwrite_strings_0 = QWidget(self.checkbox_overwrite_strings)
        self.checkbox_overwrite_strings_0.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_overwrite_strings_0.setObjectName("checkbox_overwrite_strings_0")
        self.overwrite_strings = QWidget(self.checkbox_overwrite_strings_0)
        self.overwrite_strings.setGeometry(QRect(30, 3, 140, 13))
        self.overwrite_strings.setObjectName("overwrite_strings")
        self.overwrite_strings_0 = QLabel(self.overwrite_strings)
        self.overwrite_strings_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.CheckboxOverwriteStrings0Strings.TEXT_OVERWRITE_STRINGS_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.overwrite_strings_0.setFont(font)
        self.overwrite_strings_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.overwrite_strings_0.setGeometry(QRect(0, 0, 140, 13))
        self.overwrite_strings_0.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.overwrite_strings_0.setMouseTracking(False)
        self.overwrite_strings_0.setContextMenuPolicy(Qt.NoContextMenu)
        def overwrite_strings_0_set_text(text:str):
            self.overwrite_strings_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.CheckboxOverwriteStrings0Controller.overwrite_strings_0_set_text = overwrite_strings_0_set_text
        except NameError:
            print("No function overwrite_strings_0_set_text defined. Current text : " + self.overwrite_strings_0.text())
        except Exception as e:
            print("Caught exception while trying to call overwrite_strings_0_set_text : " + str(e))
        self.rectangle_31_3 = QWidget(self.checkbox_overwrite_strings_0)
        self.rectangle_31_3.setGeometry(QRect(0, 0, 21, 21))
        self.rectangle_31_3.setObjectName("rectangle_31_3")
        
        self.rectangle_31_4 = QLabel(self.rectangle_31_3)
        self.rectangle_31_4.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_4 = QSvgWidget(self.rectangle_31_4)
        self.q_svg_widget_rectangle_31_4.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_4.load("svg/file22.svg")
        self.checked_5 = QWidget(self.checkbox_overwrite_strings_0)
        self.checked_5.setGeometry(QRect(3, 3, 13, 13))
        self.checked_5.setObjectName("checked_5")
        
        self.checked_6 = QLabel(self.checked_5)
        self.checked_6.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_6 = QSvgWidget(self.checked_6)
        self.q_svg_widget_checked_6.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_6.load("svg/file23.svg")
        self.checked_7 = QWidget(self.checked_5)
        self.checked_7.setGeometry(QRect(0, 0, 13, 13))
        self.checked_7.setObjectName("checked_7")
        self.path_5_copy_10_3 = QWidget(self.checked_7)
        self.path_5_copy_10_3.setGeometry(QRect(2, 2, 9, 9))
        self.path_5_copy_10_3.setObjectName("path_5_copy_10_3")
        
        self.path_5_copy_10_4 = QLabel(self.path_5_copy_10_3)
        self.path_5_copy_10_4.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_4 = QSvgWidget(self.path_5_copy_10_4)
        self.q_svg_widget_path_5_copy_10_4.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_4.load("svg/file24.svg")
        
        self.checkbox_overwrite_strings_1_checked = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.CheckboxOverwriteStrings1Config.default_checked
        self.checkbox_overwrite_strings_1 = QPushButton(self.checkbox_overwrite_strings)
        self.checkbox_overwrite_strings_1.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_overwrite_strings_1.setFlat(True)
        self.checkbox_overwrite_strings_1.setAutoFillBackground(False)
        self.checkbox_overwrite_strings_1.setObjectName("checkbox_overwrite_strings_1")
        self.checkbox_overwrite_strings_1.setMouseTracking(True)
        self.checkbox_overwrite_strings_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.checkbox_overwrite_strings_1.setAcceptDrops(False)
        self.checkbox_overwrite_strings_1.setFocusPolicy(Qt.NoFocus)
        self.checkbox_overwrite_strings_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.checkbox_overwrite_strings_1.setEnabled(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.CheckboxOverwriteStrings1Config.enabled)
        def __checkbox_overwrite_strings_1_check_changed():
            self.checkbox_overwrite_strings_1_checked = not self.checkbox_overwrite_strings_1_checked
            self.checked_5.setVisible(self.checkbox_overwrite_strings_1_checked)
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.checkbox_overwrite_strings_1_check_changed(self.checkbox_overwrite_strings_1_checked)
            except NameError:
                print("No function checkbox_overwrite_strings_1_check_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.checkbox_overwrite_strings_1_check_changed : " + str(e))
        
        def __checkbox_overwrite_strings_1_set_checked(checked:bool):
            self.checkbox_overwrite_strings_1_checked = checked
            self.checked_5.setVisible(self.checkbox_overwrite_strings_1_checked)
        self.checkbox_overwrite_strings_1.clicked.connect(__checkbox_overwrite_strings_1_check_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.checkbox_overwrite_strings_1_set_checked = __checkbox_overwrite_strings_1_set_checked
        except NameError:
            print("No function checkbox_overwrite_strings_1_set_checked defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.checkbox_overwrite_strings_1_set_checked : " + str(e))
        self.checked_5.setVisible(self.checkbox_overwrite_strings_1_checked)
        self.group_slider_scale = QWidget(self.compile_0)
        self.group_slider_scale.setGeometry(QRect(217, 0, 247, 31))
        self.group_slider_scale.setObjectName("group_slider_scale")
        self.group_slider_scale_0 = QWidget(self.group_slider_scale)
        self.group_slider_scale_0.setGeometry(QRect(0, 0, 247, 31))
        self.group_slider_scale_0.setObjectName("group_slider_scale_0")
        self.slider_scale = QWidget(self.group_slider_scale_0)
        self.slider_scale.setGeometry(QRect(79, 16, 168, 15))
        self.slider_scale.setObjectName("slider_scale")
        self.slider_scale_0 = QWidget(self.slider_scale)
        self.slider_scale_0.setGeometry(QRect(0, 0, 168, 15))
        self.slider_scale_0.setObjectName("slider_scale_0")
        self.ωelements2_highlight = QWidget(self.slider_scale_0)
        self.ωelements2_highlight.setGeometry(QRect(0, 5, 168, 4))
        self.ωelements2_highlight.setObjectName("ωelements2_highlight")
        
        self.ωelements2_highlight_0 = QLabel(self.ωelements2_highlight)
        self.ωelements2_highlight_0.setGeometry(QRect(0, 0, 168, 4))
        self.q_svg_widget_ωelements2_highlight_0 = QSvgWidget(self.ωelements2_highlight_0)
        self.q_svg_widget_ωelements2_highlight_0.setGeometry(QRect(0, 0, 168, 4))
        self.q_svg_widget_ωelements2_highlight_0.load("svg/file25.svg")
        self.ωelementsknob = QWidget(self.slider_scale_0)
        self.ωelementsknob.setGeometry(QRect(76, 0, 15, 15))
        self.ωelementsknob.setObjectName("ωelementsknob")
        self.ωelementsknob_0 = QWidget(self.ωelementsknob)
        self.ωelementsknob_0.setGeometry(QRect(0, 0, 15, 15))
        self.ωelementsknob_0.setObjectName("ωelementsknob_0")
        self.knob = QWidget(self.ωelementsknob_0)
        self.knob.setGeometry(QRect(0, 0, 15, 15))
        self.knob.setObjectName("knob")
        
        self.knob_0 = QLabel(self.knob)
        self.knob_0.setGeometry(QRect(0, 0, 15, 15))
        self.q_svg_widget_knob_0 = QSvgWidget(self.knob_0)
        self.q_svg_widget_knob_0.setGeometry(QRect(0, 0, 15, 15))
        self.q_svg_widget_knob_0.load("svg/file26.svg")
        self.states = QWidget(self.ωelementsknob_0)
        self.states.setGeometry(QRect(-7, -7, 30, 30))
        self.states.setObjectName("states")
        
        self.slider_scale_1_captured = False
        self.slider_scale_1_value = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.GroupSliderScale0Config.SliderScale1Config.default_value
        def __slider_scale_1_update_thumb_position(*args, **kwargs):
            if self.slider_scale_1_captured and len(args) > 0 :
                x, y, width, height = (0.0, 0.0, 168.24969863891602, 15.0)
                event = args[0]
                mouse_x, mouse_y = event.x(), event.y()
                self.slider_scale_1_value = mouse_x / width
                if self.slider_scale_1_value < 0 :
                    self.slider_scale_1_value = 0
                if self.slider_scale_1_value > 1 :
                    self.slider_scale_1_value = 1
                try :
                    GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.GroupSliderScale0Handler.slider_scale_1_value_changed(self.slider_scale_1_value)
                except NameError:
                    print("No function slider_scale_1_value_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.GroupSliderScale0Handler")
                except Exception as e:
                    print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.GroupSliderScale0Handler.slider_scale_1_value_changed : " + str(e))
            self.ωelementsknob.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_1_value, 0.0, 30.452430725097656, 30.0))
            self.ωelementsknob_0.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_1_value, 0.0, 30.452430725097656, 30.0))
            self.knob.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_1_value, 0.0, 30.452430725097656, 30.0))
            self.knob_0.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_1_value, 0.0, 30.452430725097656, 30.0))
            self.states.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_1_value, 0.0, 30.452430725097656, 30.0))
        
        def __slider_scale_1_mouse_press(*args, **kwargs):
            self.slider_scale_1_captured = True
            __slider_scale_1_update_thumb_position(*args, **kwargs)
        
        def __slider_scale_1_mouse_release(*args, **kwargs):
            self.slider_scale_1_captured = False
        
        def __slider_scale_1_mouse_move(*args, **kwargs):          
            __slider_scale_1_update_thumb_position(*args, **kwargs)
        
        def __slider_scale_1_set_value(value:float) :
            self.slider_scale_1_value = value
            __slider_scale_1_update_thumb_position()
        
        self.slider_scale_1 = QPushButton(self.slider_scale)
        self.slider_scale_1.setGeometry(QRect(0, 0, 168, 15))
        self.slider_scale_1.setFlat(True)
        self.slider_scale_1.setAutoFillBackground(False)
        self.slider_scale_1.setObjectName("slider_scale_1")
        self.slider_scale_1.setMouseTracking(True)
        self.slider_scale_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.slider_scale_1.setAcceptDrops(False)
        self.slider_scale_1.setFocusPolicy(Qt.NoFocus)
        self.slider_scale_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.slider_scale_1.mousePressEvent = __slider_scale_1_mouse_press
        self.slider_scale_1.mouseReleaseEvent = __slider_scale_1_mouse_release
        self.slider_scale_1.mouseMoveEvent = __slider_scale_1_mouse_move
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderScale0Controller.slider_scale_1_set_value = __slider_scale_1_set_value
        except NameError:
            print("No function slider_scale_1_set_value defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderScale0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderScale0Controller.slider_scale_1_set_value : " + str(e))
        __slider_scale_1_update_thumb_position()
        self.ωelementsknob.setParent(self.slider_scale_1)
        self.ωelementsknob_0.setParent(self.slider_scale_1)
        self.knob.setParent(self.slider_scale_1)
        self.knob_0.setParent(self.slider_scale_1)
        self.states.setParent(self.slider_scale_1)
        self.scale = QWidget(self.group_slider_scale_0)
        self.scale.setGeometry(QRect(0, 16, 62, 13))
        self.scale.setObjectName("scale")
        self.scale_0 = QLabel(self.scale)
        self.scale_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.GroupSliderScale0Strings.TEXT_SCALE_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.scale_0.setFont(font)
        self.scale_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.scale_0.setGeometry(QRect(0, 0, 62, 13))
        self.scale_0.setAlignment(Qt.AlignVCenter | Qt.AlignRight)
        self.scale_0.setMouseTracking(False)
        self.scale_0.setContextMenuPolicy(Qt.NoContextMenu)
        def scale_0_set_text(text:str):
            self.scale_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderScale0Controller.scale_0_set_text = scale_0_set_text
        except NameError:
            print("No function scale_0_set_text defined. Current text : " + self.scale_0.text())
        except Exception as e:
            print("Caught exception while trying to call scale_0_set_text : " + str(e))
        self.x1 = QWidget(self.group_slider_scale_0)
        self.x1.setGeometry(QRect(139, 0, 47, 13))
        self.x1.setObjectName("x1")
        self.x1_0 = QLabel(self.x1)
        self.x1_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.GroupSliderScale0Strings.TEXT_X1_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.x1_0.setFont(font)
        self.x1_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.x1_0.setGeometry(QRect(0, 0, 47, 13))
        self.x1_0.setAlignment(Qt.AlignVCenter | Qt.AlignHCenter)
        self.x1_0.setMouseTracking(False)
        self.x1_0.setContextMenuPolicy(Qt.NoContextMenu)
        def x1_0_set_text(text:str):
            self.x1_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderScale0Controller.x1_0_set_text = x1_0_set_text
        except NameError:
            print("No function x1_0_set_text defined. Current text : " + self.x1_0.text())
        except Exception as e:
            print("Caught exception while trying to call x1_0_set_text : " + str(e))
        self.group_slider_text_scale = QWidget(self.compile_0)
        self.group_slider_text_scale.setGeometry(QRect(217, 41, 247, 31))
        self.group_slider_text_scale.setObjectName("group_slider_text_scale")
        self.group_slider_text_scale_0 = QWidget(self.group_slider_text_scale)
        self.group_slider_text_scale_0.setGeometry(QRect(0, 0, 247, 31))
        self.group_slider_text_scale_0.setObjectName("group_slider_text_scale_0")
        self.slider_scale_2 = QWidget(self.group_slider_text_scale_0)
        self.slider_scale_2.setGeometry(QRect(79, 16, 168, 15))
        self.slider_scale_2.setObjectName("slider_scale_2")
        self.slider_scale_3 = QWidget(self.slider_scale_2)
        self.slider_scale_3.setGeometry(QRect(0, 0, 168, 15))
        self.slider_scale_3.setObjectName("slider_scale_3")
        self.ωelements2_highlight_1 = QWidget(self.slider_scale_3)
        self.ωelements2_highlight_1.setGeometry(QRect(0, 5, 168, 4))
        self.ωelements2_highlight_1.setObjectName("ωelements2_highlight_1")
        
        self.ωelements2_highlight_2 = QLabel(self.ωelements2_highlight_1)
        self.ωelements2_highlight_2.setGeometry(QRect(0, 0, 168, 4))
        self.q_svg_widget_ωelements2_highlight_2 = QSvgWidget(self.ωelements2_highlight_2)
        self.q_svg_widget_ωelements2_highlight_2.setGeometry(QRect(0, 0, 168, 4))
        self.q_svg_widget_ωelements2_highlight_2.load("svg/file27.svg")
        self.ωelementsknob_1 = QWidget(self.slider_scale_3)
        self.ωelementsknob_1.setGeometry(QRect(76, 0, 15, 15))
        self.ωelementsknob_1.setObjectName("ωelementsknob_1")
        self.ωelementsknob_2 = QWidget(self.ωelementsknob_1)
        self.ωelementsknob_2.setGeometry(QRect(0, 0, 15, 15))
        self.ωelementsknob_2.setObjectName("ωelementsknob_2")
        self.knob_1 = QWidget(self.ωelementsknob_2)
        self.knob_1.setGeometry(QRect(0, 0, 15, 15))
        self.knob_1.setObjectName("knob_1")
        
        self.knob_2 = QLabel(self.knob_1)
        self.knob_2.setGeometry(QRect(0, 0, 15, 15))
        self.q_svg_widget_knob_2 = QSvgWidget(self.knob_2)
        self.q_svg_widget_knob_2.setGeometry(QRect(0, 0, 15, 15))
        self.q_svg_widget_knob_2.load("svg/file28.svg")
        self.states_0 = QWidget(self.ωelementsknob_2)
        self.states_0.setGeometry(QRect(-7, -7, 30, 30))
        self.states_0.setObjectName("states_0")
        
        self.slider_scale_4_captured = False
        self.slider_scale_4_value = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.GroupSliderTextScale0Config.SliderScale4Config.default_value
        def __slider_scale_4_update_thumb_position(*args, **kwargs):
            if self.slider_scale_4_captured and len(args) > 0 :
                x, y, width, height = (0.0, 0.0, 168.24969863891602, 15.0)
                event = args[0]
                mouse_x, mouse_y = event.x(), event.y()
                self.slider_scale_4_value = mouse_x / width
                if self.slider_scale_4_value < 0 :
                    self.slider_scale_4_value = 0
                if self.slider_scale_4_value > 1 :
                    self.slider_scale_4_value = 1
                try :
                    GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.GroupSliderTextScale0Handler.slider_scale_4_value_changed(self.slider_scale_4_value)
                except NameError:
                    print("No function slider_scale_4_value_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.GroupSliderTextScale0Handler")
                except Exception as e:
                    print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.GroupSliderTextScale0Handler.slider_scale_4_value_changed : " + str(e))
            self.ωelementsknob_1.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_4_value, 0.0, 30.452430725097656, 30.0))
            self.ωelementsknob_2.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_4_value, 0.0, 30.452430725097656, 30.0))
            self.knob_1.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_4_value, 0.0, 30.452430725097656, 30.0))
            self.knob_2.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_4_value, 0.0, 30.452430725097656, 30.0))
            self.states_0.setGeometry(QRect(0.0 + 153.0234832763672 * self.slider_scale_4_value, 0.0, 30.452430725097656, 30.0))
        
        def __slider_scale_4_mouse_press(*args, **kwargs):
            self.slider_scale_4_captured = True
            __slider_scale_4_update_thumb_position(*args, **kwargs)
        
        def __slider_scale_4_mouse_release(*args, **kwargs):
            self.slider_scale_4_captured = False
        
        def __slider_scale_4_mouse_move(*args, **kwargs):          
            __slider_scale_4_update_thumb_position(*args, **kwargs)
        
        def __slider_scale_4_set_value(value:float) :
            self.slider_scale_4_value = value
            __slider_scale_4_update_thumb_position()
        
        self.slider_scale_4 = QPushButton(self.slider_scale_2)
        self.slider_scale_4.setGeometry(QRect(0, 0, 168, 15))
        self.slider_scale_4.setFlat(True)
        self.slider_scale_4.setAutoFillBackground(False)
        self.slider_scale_4.setObjectName("slider_scale_4")
        self.slider_scale_4.setMouseTracking(True)
        self.slider_scale_4.setContextMenuPolicy(Qt.NoContextMenu)
        self.slider_scale_4.setAcceptDrops(False)
        self.slider_scale_4.setFocusPolicy(Qt.NoFocus)
        self.slider_scale_4.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.slider_scale_4.mousePressEvent = __slider_scale_4_mouse_press
        self.slider_scale_4.mouseReleaseEvent = __slider_scale_4_mouse_release
        self.slider_scale_4.mouseMoveEvent = __slider_scale_4_mouse_move
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderTextScale0Controller.slider_scale_4_set_value = __slider_scale_4_set_value
        except NameError:
            print("No function slider_scale_4_set_value defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderTextScale0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderTextScale0Controller.slider_scale_4_set_value : " + str(e))
        __slider_scale_4_update_thumb_position()
        self.ωelementsknob_1.setParent(self.slider_scale_4)
        self.ωelementsknob_2.setParent(self.slider_scale_4)
        self.knob_1.setParent(self.slider_scale_4)
        self.knob_2.setParent(self.slider_scale_4)
        self.states_0.setParent(self.slider_scale_4)
        self.text_scale = QWidget(self.group_slider_text_scale_0)
        self.text_scale.setGeometry(QRect(0, 16, 62, 13))
        self.text_scale.setObjectName("text_scale")
        self.text_scale_0 = QLabel(self.text_scale)
        self.text_scale_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.GroupSliderTextScale0Strings.TEXT_TEXT_SCALE_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_scale_0.setFont(font)
        self.text_scale_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.text_scale_0.setGeometry(QRect(0, 0, 62, 13))
        self.text_scale_0.setAlignment(Qt.AlignVCenter | Qt.AlignRight)
        self.text_scale_0.setMouseTracking(False)
        self.text_scale_0.setContextMenuPolicy(Qt.NoContextMenu)
        def text_scale_0_set_text(text:str):
            self.text_scale_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderTextScale0Controller.text_scale_0_set_text = text_scale_0_set_text
        except NameError:
            print("No function text_scale_0_set_text defined. Current text : " + self.text_scale_0.text())
        except Exception as e:
            print("Caught exception while trying to call text_scale_0_set_text : " + str(e))
        self.x1_1 = QWidget(self.group_slider_text_scale_0)
        self.x1_1.setGeometry(QRect(139, 0, 47, 13))
        self.x1_1.setObjectName("x1_1")
        self.x1_2 = QLabel(self.x1_1)
        self.x1_2.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.GroupSliderTextScale0Strings.TEXT_X1_2)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.x1_2.setFont(font)
        self.x1_2.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.x1_2.setGeometry(QRect(0, 0, 47, 13))
        self.x1_2.setAlignment(Qt.AlignVCenter | Qt.AlignHCenter)
        self.x1_2.setMouseTracking(False)
        self.x1_2.setContextMenuPolicy(Qt.NoContextMenu)
        def x1_2_set_text(text:str):
            self.x1_2.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.GroupSliderTextScale0Controller.x1_2_set_text = x1_2_set_text
        except NameError:
            print("No function x1_2_set_text defined. Current text : " + self.x1_2.text())
        except Exception as e:
            print("Caught exception while trying to call x1_2_set_text : " + str(e))
        self.custom_button_compile = QWidget(self.compile_0)
        self.custom_button_compile.setGeometry(QRect(158, 133, 177, 36))
        self.custom_button_compile.setObjectName("custom_button_compile")
        self.custom_button_compile_0 = QWidget(self.custom_button_compile)
        self.custom_button_compile_0.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_compile_0.setObjectName("custom_button_compile_0")
        self.normal_2 = QWidget(self.custom_button_compile_0)
        self.normal_2.setGeometry(QRect(0, 0, 177, 36))
        self.normal_2.setObjectName("normal_2")
        
        self.normal_3 = QLabel(self.normal_2)
        self.normal_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_3 = QSvgWidget(self.normal_3)
        self.q_svg_widget_normal_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_3.load("svg/file29.svg")
        self.normal_4 = QWidget(self.normal_2)
        self.normal_4.setGeometry(QRect(0, 0, 177, 36))
        self.normal_4.setObjectName("normal_4")
        self.text_9 = QWidget(self.normal_4)
        self.text_9.setGeometry(QRect(66, 11, 45, 13))
        self.text_9.setObjectName("text_9")
        self.text_10 = QLabel(self.text_9)
        self.text_10.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.CustomButtonCompile0Strings.Normal4Strings.TEXT_TEXT_10)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_10.setFont(font)
        self.text_10.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_10.setGeometry(QRect(0, 0, 45, 13))
        self.text_10.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_10.setMouseTracking(False)
        self.text_10.setContextMenuPolicy(Qt.NoContextMenu)
        def text_10_set_text(text:str):
            self.text_10.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.CustomButtonCompile0Controller.Normal4Controller.text_10_set_text = text_10_set_text
        except NameError:
            print("No function text_10_set_text defined. Current text : " + self.text_10.text())
        except Exception as e:
            print("Caught exception while trying to call text_10_set_text : " + str(e))
        self.disabled_2 = QWidget(self.custom_button_compile_0)
        self.disabled_2.setGeometry(QRect(0, 0, 177, 36))
        self.disabled_2.setObjectName("disabled_2")
        
        self.disabled_3 = QLabel(self.disabled_2)
        self.disabled_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_3 = QSvgWidget(self.disabled_3)
        self.q_svg_widget_disabled_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_3.load("svg/file30.svg")
        self.disabled_4 = QWidget(self.disabled_2)
        self.disabled_4.setGeometry(QRect(0, 0, 177, 36))
        self.disabled_4.setObjectName("disabled_4")
        self.text_11 = QWidget(self.disabled_4)
        self.text_11.setGeometry(QRect(66, 11, 45, 13))
        self.text_11.setObjectName("text_11")
        self.text_12 = QLabel(self.text_11)
        self.text_12.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.CustomButtonCompile0Strings.Disabled4Strings.TEXT_TEXT_12)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_12.setFont(font)
        self.text_12.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_12.setGeometry(QRect(0, 0, 45, 13))
        self.text_12.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_12.setMouseTracking(False)
        self.text_12.setContextMenuPolicy(Qt.NoContextMenu)
        def text_12_set_text(text:str):
            self.text_12.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.CustomButtonCompile0Controller.Disabled4Controller.text_12_set_text = text_12_set_text
        except NameError:
            print("No function text_12_set_text defined. Current text : " + self.text_12.text())
        except Exception as e:
            print("Caught exception while trying to call text_12_set_text : " + str(e))
        self.pressed_2 = QWidget(self.custom_button_compile_0)
        self.pressed_2.setGeometry(QRect(0, 0, 177, 36))
        self.pressed_2.setObjectName("pressed_2")
        
        self.pressed_3 = QLabel(self.pressed_2)
        self.pressed_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_3 = QSvgWidget(self.pressed_3)
        self.q_svg_widget_pressed_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_3.load("svg/file31.svg")
        self.pressed_4 = QWidget(self.pressed_2)
        self.pressed_4.setGeometry(QRect(0, 0, 177, 36))
        self.pressed_4.setObjectName("pressed_4")
        self.text_13 = QWidget(self.pressed_4)
        self.text_13.setGeometry(QRect(66, 11, 45, 13))
        self.text_13.setObjectName("text_13")
        self.text_14 = QLabel(self.text_13)
        self.text_14.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.CustomButtonCompile0Strings.Pressed4Strings.TEXT_TEXT_14)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_14.setFont(font)
        self.text_14.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_14.setGeometry(QRect(0, 0, 45, 13))
        self.text_14.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_14.setMouseTracking(False)
        self.text_14.setContextMenuPolicy(Qt.NoContextMenu)
        def text_14_set_text(text:str):
            self.text_14.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.CustomButtonCompile0Controller.Pressed4Controller.text_14_set_text = text_14_set_text
        except NameError:
            print("No function text_14_set_text defined. Current text : " + self.text_14.text())
        except Exception as e:
            print("Caught exception while trying to call text_14_set_text : " + str(e))
        self.mouse_over_2 = QWidget(self.custom_button_compile_0)
        self.mouse_over_2.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over_2.setObjectName("mouse_over_2")
        
        self.mouse_over_3 = QLabel(self.mouse_over_2)
        self.mouse_over_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_3 = QSvgWidget(self.mouse_over_3)
        self.q_svg_widget_mouse_over_3.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_3.load("svg/file32.svg")
        self.mouse_over_4 = QWidget(self.mouse_over_2)
        self.mouse_over_4.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over_4.setObjectName("mouse_over_4")
        self.text_15 = QWidget(self.mouse_over_4)
        self.text_15.setGeometry(QRect(66, 11, 45, 13))
        self.text_15.setObjectName("text_15")
        self.text_16 = QLabel(self.text_15)
        self.text_16.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Compile0Strings.CustomButtonCompile0Strings.MouseOver4Strings.TEXT_TEXT_16)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_16.setFont(font)
        self.text_16.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_16.setGeometry(QRect(0, 0, 45, 13))
        self.text_16.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_16.setMouseTracking(False)
        self.text_16.setContextMenuPolicy(Qt.NoContextMenu)
        def text_16_set_text(text:str):
            self.text_16.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.CustomButtonCompile0Controller.MouseOver4Controller.text_16_set_text = text_16_set_text
        except NameError:
            print("No function text_16_set_text defined. Current text : " + self.text_16.text())
        except Exception as e:
            print("Caught exception while trying to call text_16_set_text : " + str(e))
        
        self.custom_button_compile_1 = QPushButton(self.custom_button_compile)
        self.custom_button_compile_1.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_compile_1.setFlat(True)
        self.custom_button_compile_1.setAutoFillBackground(False)
        self.custom_button_compile_1.setObjectName("custom_button_compile_1")
        self.custom_button_compile_1.setMouseTracking(True)
        self.custom_button_compile_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_button_compile_1.setAcceptDrops(False)
        self.custom_button_compile_1.setFocusPolicy(Qt.NoFocus)
        self.custom_button_compile_1_enabled = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Compile0Config.CustomButtonCompile1Config.enabled
        def __custom_button_compile_1_mouse_over(*args, **kwargs):
            if self.custom_button_compile_1_enabled :
                self.mouse_over_2.setVisible(True)
                self.pressed_2.setVisible(False)
                self.disabled_2.setVisible(False)
        def __custom_button_compile_1_mouse_leave(*args, **kwargs):
            if self.custom_button_compile_1_enabled :
                self.mouse_over_2.setVisible(False)
                self.pressed_2.setVisible(False)
                self.disabled_2.setVisible(False)
        def __custom_button_compile_1_mouse_press(*args, **kwargs):
            if self.custom_button_compile_1_enabled :
                self.mouse_over_2.setVisible(False)
                self.pressed_2.setVisible(True)
                self.disabled_2.setVisible(False)
        def __custom_button_compile_1_mouse_release(*args, **kwargs):
            if self.custom_button_compile_1_enabled :
                self.mouse_over_2.setVisible(True)
                self.pressed_2.setVisible(False)
                self.disabled_2.setVisible(False)
                self.custom_button_compile_1.clicked.emit()
        def __custom_button_compile_1_disable(*args, **kwargs):
            self.custom_button_compile_1_enabled = False
            self.mouse_over_2.setVisible(False)
            self.pressed_2.setVisible(False)
            self.disabled_2.setVisible(True)
            self.custom_button_compile_1.setMouseTracking(False)
            self.custom_button_compile_1.setFocusPolicy(Qt.NoFocus)
            self.custom_button_compile_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        def __custom_button_compile_1_enable(*args, **kwargs):
            self.custom_button_compile_1_enabled = True
            self.mouse_over_2.setVisible(False)
            self.pressed_2.setVisible(False)
            self.disabled_2.setVisible(False)
            self.custom_button_compile_1.setMouseTracking(True)
        
        def __custom_button_compile_1_clicked(*args, **kwargs):
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.custom_button_compile_1_clicked()
            except NameError:
                print("No function custom_button_compile_1_clicked defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Compile0Handler.custom_button_compile_1_clicked : " + str(e))
        
        self.custom_button_compile_1.clicked.connect(__custom_button_compile_1_clicked)
        self.custom_button_compile_1.enterEvent = __custom_button_compile_1_mouse_over
        self.custom_button_compile_1.leaveEvent = __custom_button_compile_1_mouse_leave
        self.custom_button_compile_1.mousePressEvent = __custom_button_compile_1_mouse_press
        self.custom_button_compile_1.mouseReleaseEvent = __custom_button_compile_1_mouse_release
        self.custom_button_compile_1.disable = __custom_button_compile_1_disable
        self.custom_button_compile_1.enable = __custom_button_compile_1_enable
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.custom_button_compile_1_enable = __custom_button_compile_1_enable
        except NameError:
            print("No function custom_button_compile_1_enable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.custom_button_compile_1_enable : " + str(e))
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.custom_button_compile_1_disable = __custom_button_compile_1_disable
        except NameError:
            print("No function custom_button_compile_1_disable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Compile0Controller.custom_button_compile_1_disable : " + str(e))
        self.mouse_over_2.setVisible(False)
        self.pressed_2.setVisible(False)
        self.disabled_2.setVisible(False)
        self.download = QWidget(self.tabs_content_0)
        self.download.setGeometry(QRect(2, 3, 459, 168))
        self.download.setObjectName("download")
        self.download_0 = QWidget(self.download)
        self.download_0.setGeometry(QRect(0, 0, 459, 168))
        self.download_0.setObjectName("download_0")
        self.group_text_field_figma_token = QWidget(self.download_0)
        self.group_text_field_figma_token.setGeometry(QRect(0, 0, 459, 33))
        self.group_text_field_figma_token.setObjectName("group_text_field_figma_token")
        self.group_text_field_figma_token_0 = QWidget(self.group_text_field_figma_token)
        self.group_text_field_figma_token_0.setGeometry(QRect(0, 0, 459, 33))
        self.group_text_field_figma_token_0.setObjectName("group_text_field_figma_token_0")
        self.inset = QWidget(self.group_text_field_figma_token_0)
        self.inset.setGeometry(QRect(0, 0, 459, 33))
        self.inset.setObjectName("inset")
        
        self.inset_0 = QLabel(self.inset)
        self.inset_0.setGeometry(QRect(0, 0, 459, 33))
        self.q_svg_widget_inset_0 = QSvgWidget(self.inset_0)
        self.q_svg_widget_inset_0.setGeometry(QRect(0, 0, 459, 33))
        self.q_svg_widget_inset_0.load("svg/file33.svg")
        self.inset_1 = QWidget(self.inset)
        self.inset_1.setGeometry(QRect(0, 0, 459, 33))
        self.inset_1.setObjectName("inset_1")
        self.label_and_value = QWidget(self.inset_1)
        self.label_and_value.setGeometry(QRect(12, 0, 258, 33))
        self.label_and_value.setObjectName("label_and_value")
        self.title = QWidget(self.group_text_field_figma_token_0)
        self.title.setGeometry(QRect(15, 9, 200, 16))
        self.title.setObjectName("title")
        self.title_0 = QLabel(self.title)
        self.title_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.GroupTextFieldFigmaToken0Strings.TEXT_TITLE_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.title_0.setFont(font)
        self.title_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.title_0.setGeometry(QRect(0, 0, 200, 16))
        self.title_0.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.title_0.setMouseTracking(False)
        self.title_0.setContextMenuPolicy(Qt.NoContextMenu)
        def title_0_set_text(text:str):
            self.title_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken0Controller.title_0_set_text = title_0_set_text
        except NameError:
            print("No function title_0_set_text defined. Current text : " + self.title_0.text())
        except Exception as e:
            print("Caught exception while trying to call title_0_set_text : " + str(e))
        self.custom_text_field_figma_token = QWidget(self.group_text_field_figma_token_0)
        self.custom_text_field_figma_token.setGeometry(QRect(115, 0, 343, 33))
        self.custom_text_field_figma_token.setObjectName("custom_text_field_figma_token")
        self.custom_text_field_figma_token_0 = QWidget(self.custom_text_field_figma_token)
        self.custom_text_field_figma_token_0.setGeometry(QRect(0, 0, 343, 33))
        self.custom_text_field_figma_token_0.setObjectName("custom_text_field_figma_token_0")
        self.background_3 = QWidget(self.custom_text_field_figma_token_0)
        self.background_3.setGeometry(QRect(0, 0, 343, 33))
        self.background_3.setObjectName("background_3")
        self.bounds = QWidget(self.custom_text_field_figma_token_0)
        self.bounds.setGeometry(QRect(0, 8, 337, 16))
        self.bounds.setObjectName("bounds")
        self.hint = QWidget(self.custom_text_field_figma_token_0)
        self.hint.setGeometry(QRect(5, 8, 326, 16))
        self.hint.setObjectName("hint")
        self.hint_0 = QLabel(self.hint)
        self.hint_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.GroupTextFieldFigmaToken0Strings.CustomTextFieldFigmaToken0Strings.TEXT_HINT_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.hint_0.setFont(font)
        self.hint_0.setStyleSheet("color: rgba(60.00000022351742, 60.00000022351742, 67.00000360608101, 255.0)")
        self.hint_0.setGeometry(QRect(0, 0, 326, 16))
        self.hint_0.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.hint_0.setMouseTracking(False)
        self.hint_0.setContextMenuPolicy(Qt.NoContextMenu)
        def hint_0_set_text(text:str):
            self.hint_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken0Controller.CustomTextFieldFigmaToken0Controller.hint_0_set_text = hint_0_set_text
        except NameError:
            print("No function hint_0_set_text defined. Current text : " + self.hint_0.text())
        except Exception as e:
            print("Caught exception while trying to call hint_0_set_text : " + str(e))
        self.text_17 = QWidget(self.custom_text_field_figma_token_0)
        self.text_17.setGeometry(QRect(0, 9, 326, 16))
        self.text_17.setObjectName("text_17")
        self.text_18 = QLabel(self.text_17)
        self.text_18.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.GroupTextFieldFigmaToken0Strings.CustomTextFieldFigmaToken0Strings.TEXT_TEXT_18)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_18.setFont(font)
        self.text_18.setStyleSheet("color: rgba(105.8958412706852, 105.8958412706852, 105.8958412706852, 255.0)")
        self.text_18.setGeometry(QRect(0, 0, 326, 16))
        self.text_18.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.text_18.setMouseTracking(False)
        self.text_18.setContextMenuPolicy(Qt.NoContextMenu)
        def text_18_set_text(text:str):
            self.text_18.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken0Controller.CustomTextFieldFigmaToken0Controller.text_18_set_text = text_18_set_text
        except NameError:
            print("No function text_18_set_text defined. Current text : " + self.text_18.text())
        except Exception as e:
            print("Caught exception while trying to call text_18_set_text : " + str(e))
        
        self.custom_text_field_figma_token_1 = QLineEdit(self.custom_text_field_figma_token)
        self.custom_text_field_figma_token_1.setGeometry(QRect(0, 8, 337, 16))
        self.custom_text_field_figma_token_1.setAutoFillBackground(False)
        self.custom_text_field_figma_token_1.setObjectName("custom_text_field_figma_token_1")
        self.custom_text_field_figma_token_1.setMouseTracking(True)
        self.custom_text_field_figma_token_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_text_field_figma_token_1.setAcceptDrops(False)
        self.custom_text_field_figma_token_1.setFont(self.text_18.font())
        text_color = self.text_18.styleSheet().split("color: ")[1].split(";")[0]
        self.text_18.setStyleSheet("color: rgba(255, 255, 255, 0);")
        self.text_18.hide()
        self.custom_text_field_figma_token_1.setStyleSheet("color: " + text_color + "; background-color: rgba(255, 255, 255, 0); border: 0px solid rgba(255, 255, 255, 0);")
        
        def __custom_text_field_figma_token_1_text_changed(*args, **kwargs):    
            if self.custom_text_field_figma_token_1.text() == "" :
                self.hint_0.show()
            else :
                self.hint_0.hide()
                text_18_set_text(self.custom_text_field_figma_token_1.text())              
                   
            current_text = self.custom_text_field_figma_token_1.text()
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.GroupTextFieldFigmaToken0Handler.custom_text_field_figma_token_1_text_changed(current_text)
            except NameError:
                print("No function custom_text_field_figma_token_1_text_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.GroupTextFieldFigmaToken0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.GroupTextFieldFigmaToken0Handler.custom_text_field_figma_token_1_text_changed : " + str(e))
        
        __custom_text_field_figma_token_1_text_changed()   
        self.custom_text_field_figma_token_1.textChanged.connect(__custom_text_field_figma_token_1_text_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken0Controller.custom_text_field_figma_token_1_set_text = self.custom_text_field_figma_token_1.setText
        except NameError:
            print("No function custom_text_field_figma_token_1_set_text defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken0Controller.custom_text_field_figma_token_1_set_text : " + str(e))
        self.group_text_field_figma_token_1 = QWidget(self.download_0)
        self.group_text_field_figma_token_1.setGeometry(QRect(0, 48, 459, 33))
        self.group_text_field_figma_token_1.setObjectName("group_text_field_figma_token_1")
        self.group_text_field_figma_token_2 = QWidget(self.group_text_field_figma_token_1)
        self.group_text_field_figma_token_2.setGeometry(QRect(0, 0, 459, 33))
        self.group_text_field_figma_token_2.setObjectName("group_text_field_figma_token_2")
        self.inset_2 = QWidget(self.group_text_field_figma_token_2)
        self.inset_2.setGeometry(QRect(0, 0, 458, 33))
        self.inset_2.setObjectName("inset_2")
        
        self.inset_3 = QLabel(self.inset_2)
        self.inset_3.setGeometry(QRect(0, 0, 458, 33))
        self.q_svg_widget_inset_3 = QSvgWidget(self.inset_3)
        self.q_svg_widget_inset_3.setGeometry(QRect(0, 0, 458, 33))
        self.q_svg_widget_inset_3.load("svg/file34.svg")
        self.inset_4 = QWidget(self.inset_2)
        self.inset_4.setGeometry(QRect(0, 0, 458, 33))
        self.inset_4.setObjectName("inset_4")
        self.label_and_value_0 = QWidget(self.inset_4)
        self.label_and_value_0.setGeometry(QRect(12, 0, 258, 33))
        self.label_and_value_0.setObjectName("label_and_value_0")
        self.title_1 = QWidget(self.group_text_field_figma_token_2)
        self.title_1.setGeometry(QRect(15, 9, 200, 16))
        self.title_1.setObjectName("title_1")
        self.title_2 = QLabel(self.title_1)
        self.title_2.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.GroupTextFieldFigmaToken2Strings.TEXT_TITLE_2)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.title_2.setFont(font)
        self.title_2.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.title_2.setGeometry(QRect(0, 0, 200, 16))
        self.title_2.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.title_2.setMouseTracking(False)
        self.title_2.setContextMenuPolicy(Qt.NoContextMenu)
        def title_2_set_text(text:str):
            self.title_2.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken2Controller.title_2_set_text = title_2_set_text
        except NameError:
            print("No function title_2_set_text defined. Current text : " + self.title_2.text())
        except Exception as e:
            print("Caught exception while trying to call title_2_set_text : " + str(e))
        self.custom_text_field_figma_token_2 = QWidget(self.group_text_field_figma_token_2)
        self.custom_text_field_figma_token_2.setGeometry(QRect(115, 0, 343, 33))
        self.custom_text_field_figma_token_2.setObjectName("custom_text_field_figma_token_2")
        self.custom_text_field_figma_token_3 = QWidget(self.custom_text_field_figma_token_2)
        self.custom_text_field_figma_token_3.setGeometry(QRect(0, 0, 343, 33))
        self.custom_text_field_figma_token_3.setObjectName("custom_text_field_figma_token_3")
        self.background_4 = QWidget(self.custom_text_field_figma_token_3)
        self.background_4.setGeometry(QRect(0, 0, 343, 33))
        self.background_4.setObjectName("background_4")
        self.bounds_0 = QWidget(self.custom_text_field_figma_token_3)
        self.bounds_0.setGeometry(QRect(0, 8, 336, 16))
        self.bounds_0.setObjectName("bounds_0")
        self.hint_1 = QWidget(self.custom_text_field_figma_token_3)
        self.hint_1.setGeometry(QRect(5, 8, 325, 16))
        self.hint_1.setObjectName("hint_1")
        self.hint_2 = QLabel(self.hint_1)
        self.hint_2.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.GroupTextFieldFigmaToken2Strings.CustomTextFieldFigmaToken3Strings.TEXT_HINT_2)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.hint_2.setFont(font)
        self.hint_2.setStyleSheet("color: rgba(60.00000022351742, 60.00000022351742, 67.00000360608101, 255.0)")
        self.hint_2.setGeometry(QRect(0, 0, 325, 16))
        self.hint_2.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.hint_2.setMouseTracking(False)
        self.hint_2.setContextMenuPolicy(Qt.NoContextMenu)
        def hint_2_set_text(text:str):
            self.hint_2.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken2Controller.CustomTextFieldFigmaToken3Controller.hint_2_set_text = hint_2_set_text
        except NameError:
            print("No function hint_2_set_text defined. Current text : " + self.hint_2.text())
        except Exception as e:
            print("Caught exception while trying to call hint_2_set_text : " + str(e))
        self.text_19 = QWidget(self.custom_text_field_figma_token_3)
        self.text_19.setGeometry(QRect(1, 8, 325, 16))
        self.text_19.setObjectName("text_19")
        self.text_20 = QLabel(self.text_19)
        self.text_20.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.GroupTextFieldFigmaToken2Strings.CustomTextFieldFigmaToken3Strings.TEXT_TEXT_20)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_20.setFont(font)
        self.text_20.setStyleSheet("color: rgba(105.8958412706852, 105.8958412706852, 105.8958412706852, 255.0)")
        self.text_20.setGeometry(QRect(0, 0, 325, 16))
        self.text_20.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.text_20.setMouseTracking(False)
        self.text_20.setContextMenuPolicy(Qt.NoContextMenu)
        def text_20_set_text(text:str):
            self.text_20.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken2Controller.CustomTextFieldFigmaToken3Controller.text_20_set_text = text_20_set_text
        except NameError:
            print("No function text_20_set_text defined. Current text : " + self.text_20.text())
        except Exception as e:
            print("Caught exception while trying to call text_20_set_text : " + str(e))
        
        self.custom_text_field_figma_token_4 = QLineEdit(self.custom_text_field_figma_token_2)
        self.custom_text_field_figma_token_4.setGeometry(QRect(0, 8, 336, 16))
        self.custom_text_field_figma_token_4.setAutoFillBackground(False)
        self.custom_text_field_figma_token_4.setObjectName("custom_text_field_figma_token_4")
        self.custom_text_field_figma_token_4.setMouseTracking(True)
        self.custom_text_field_figma_token_4.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_text_field_figma_token_4.setAcceptDrops(False)
        self.custom_text_field_figma_token_4.setFont(self.text_20.font())
        text_color = self.text_20.styleSheet().split("color: ")[1].split(";")[0]
        self.text_20.setStyleSheet("color: rgba(255, 255, 255, 0);")
        self.text_20.hide()
        self.custom_text_field_figma_token_4.setStyleSheet("color: " + text_color + "; background-color: rgba(255, 255, 255, 0); border: 0px solid rgba(255, 255, 255, 0);")
        
        def __custom_text_field_figma_token_4_text_changed(*args, **kwargs):    
            if self.custom_text_field_figma_token_4.text() == "" :
                self.hint_2.show()
            else :
                self.hint_2.hide()
                text_20_set_text(self.custom_text_field_figma_token_4.text())              
                   
            current_text = self.custom_text_field_figma_token_4.text()
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.GroupTextFieldFigmaToken2Handler.custom_text_field_figma_token_4_text_changed(current_text)
            except NameError:
                print("No function custom_text_field_figma_token_4_text_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.GroupTextFieldFigmaToken2Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.GroupTextFieldFigmaToken2Handler.custom_text_field_figma_token_4_text_changed : " + str(e))
        
        __custom_text_field_figma_token_4_text_changed()   
        self.custom_text_field_figma_token_4.textChanged.connect(__custom_text_field_figma_token_4_text_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken2Controller.custom_text_field_figma_token_4_set_text = self.custom_text_field_figma_token_4.setText
        except NameError:
            print("No function custom_text_field_figma_token_4_set_text defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken2Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.GroupTextFieldFigmaToken2Controller.custom_text_field_figma_token_4_set_text : " + str(e))
        self.checkbox_skip_images = QWidget(self.download_0)
        self.checkbox_skip_images.setGeometry(QRect(6, 100, 171, 21))
        self.checkbox_skip_images.setObjectName("checkbox_skip_images")
        self.checkbox_skip_images_0 = QWidget(self.checkbox_skip_images)
        self.checkbox_skip_images_0.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_skip_images_0.setObjectName("checkbox_skip_images_0")
        self.skip_images = QWidget(self.checkbox_skip_images_0)
        self.skip_images.setGeometry(QRect(30, 3, 140, 13))
        self.skip_images.setObjectName("skip_images")
        self.skip_images_0 = QLabel(self.skip_images)
        self.skip_images_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.CheckboxSkipImages0Strings.TEXT_SKIP_IMAGES_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.skip_images_0.setFont(font)
        self.skip_images_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.skip_images_0.setGeometry(QRect(0, 0, 140, 13))
        self.skip_images_0.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.skip_images_0.setMouseTracking(False)
        self.skip_images_0.setContextMenuPolicy(Qt.NoContextMenu)
        def skip_images_0_set_text(text:str):
            self.skip_images_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.CheckboxSkipImages0Controller.skip_images_0_set_text = skip_images_0_set_text
        except NameError:
            print("No function skip_images_0_set_text defined. Current text : " + self.skip_images_0.text())
        except Exception as e:
            print("Caught exception while trying to call skip_images_0_set_text : " + str(e))
        self.rectangle_31_5 = QWidget(self.checkbox_skip_images_0)
        self.rectangle_31_5.setGeometry(QRect(0, 0, 21, 21))
        self.rectangle_31_5.setObjectName("rectangle_31_5")
        
        self.rectangle_31_6 = QLabel(self.rectangle_31_5)
        self.rectangle_31_6.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_6 = QSvgWidget(self.rectangle_31_6)
        self.q_svg_widget_rectangle_31_6.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_6.load("svg/file35.svg")
        self.checked_8 = QWidget(self.checkbox_skip_images_0)
        self.checked_8.setGeometry(QRect(3, 3, 13, 13))
        self.checked_8.setObjectName("checked_8")
        
        self.checked_9 = QLabel(self.checked_8)
        self.checked_9.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_9 = QSvgWidget(self.checked_9)
        self.q_svg_widget_checked_9.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_9.load("svg/file36.svg")
        self.checked_10 = QWidget(self.checked_8)
        self.checked_10.setGeometry(QRect(0, 0, 13, 13))
        self.checked_10.setObjectName("checked_10")
        self.path_5_copy_10_5 = QWidget(self.checked_10)
        self.path_5_copy_10_5.setGeometry(QRect(2, 2, 9, 9))
        self.path_5_copy_10_5.setObjectName("path_5_copy_10_5")
        
        self.path_5_copy_10_6 = QLabel(self.path_5_copy_10_5)
        self.path_5_copy_10_6.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_6 = QSvgWidget(self.path_5_copy_10_6)
        self.q_svg_widget_path_5_copy_10_6.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_6.load("svg/file37.svg")
        
        self.checkbox_skip_images_1_checked = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Download0Config.CheckboxSkipImages1Config.default_checked
        self.checkbox_skip_images_1 = QPushButton(self.checkbox_skip_images)
        self.checkbox_skip_images_1.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_skip_images_1.setFlat(True)
        self.checkbox_skip_images_1.setAutoFillBackground(False)
        self.checkbox_skip_images_1.setObjectName("checkbox_skip_images_1")
        self.checkbox_skip_images_1.setMouseTracking(True)
        self.checkbox_skip_images_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.checkbox_skip_images_1.setAcceptDrops(False)
        self.checkbox_skip_images_1.setFocusPolicy(Qt.NoFocus)
        self.checkbox_skip_images_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.checkbox_skip_images_1.setEnabled(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Download0Config.CheckboxSkipImages1Config.enabled)
        def __checkbox_skip_images_1_check_changed():
            self.checkbox_skip_images_1_checked = not self.checkbox_skip_images_1_checked
            self.checked_8.setVisible(self.checkbox_skip_images_1_checked)
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.checkbox_skip_images_1_check_changed(self.checkbox_skip_images_1_checked)
            except NameError:
                print("No function checkbox_skip_images_1_check_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.checkbox_skip_images_1_check_changed : " + str(e))
        
        def __checkbox_skip_images_1_set_checked(checked:bool):
            self.checkbox_skip_images_1_checked = checked
            self.checked_8.setVisible(self.checkbox_skip_images_1_checked)
        self.checkbox_skip_images_1.clicked.connect(__checkbox_skip_images_1_check_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.checkbox_skip_images_1_set_checked = __checkbox_skip_images_1_set_checked
        except NameError:
            print("No function checkbox_skip_images_1_set_checked defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.checkbox_skip_images_1_set_checked : " + str(e))
        self.checked_8.setVisible(self.checkbox_skip_images_1_checked)
        self.custom_button_download = QWidget(self.download_0)
        self.custom_button_download.setGeometry(QRect(156, 132, 177, 36))
        self.custom_button_download.setObjectName("custom_button_download")
        self.custom_button_download_0 = QWidget(self.custom_button_download)
        self.custom_button_download_0.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_download_0.setObjectName("custom_button_download_0")
        self.normal_5 = QWidget(self.custom_button_download_0)
        self.normal_5.setGeometry(QRect(0, 0, 177, 36))
        self.normal_5.setObjectName("normal_5")
        
        self.normal_6 = QLabel(self.normal_5)
        self.normal_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_6 = QSvgWidget(self.normal_6)
        self.q_svg_widget_normal_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_6.load("svg/file38.svg")
        self.normal_7 = QWidget(self.normal_5)
        self.normal_7.setGeometry(QRect(0, 0, 177, 36))
        self.normal_7.setObjectName("normal_7")
        self.text_21 = QWidget(self.normal_7)
        self.text_21.setGeometry(QRect(61, 11, 54, 13))
        self.text_21.setObjectName("text_21")
        self.text_22 = QLabel(self.text_21)
        self.text_22.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.CustomButtonDownload0Strings.Normal7Strings.TEXT_TEXT_22)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_22.setFont(font)
        self.text_22.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_22.setGeometry(QRect(0, 0, 54, 13))
        self.text_22.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_22.setMouseTracking(False)
        self.text_22.setContextMenuPolicy(Qt.NoContextMenu)
        def text_22_set_text(text:str):
            self.text_22.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.CustomButtonDownload0Controller.Normal7Controller.text_22_set_text = text_22_set_text
        except NameError:
            print("No function text_22_set_text defined. Current text : " + self.text_22.text())
        except Exception as e:
            print("Caught exception while trying to call text_22_set_text : " + str(e))
        self.disabled_5 = QWidget(self.custom_button_download_0)
        self.disabled_5.setGeometry(QRect(0, 0, 177, 36))
        self.disabled_5.setObjectName("disabled_5")
        
        self.disabled_6 = QLabel(self.disabled_5)
        self.disabled_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_6 = QSvgWidget(self.disabled_6)
        self.q_svg_widget_disabled_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_6.load("svg/file39.svg")
        self.disabled_7 = QWidget(self.disabled_5)
        self.disabled_7.setGeometry(QRect(0, 0, 177, 36))
        self.disabled_7.setObjectName("disabled_7")
        self.text_23 = QWidget(self.disabled_7)
        self.text_23.setGeometry(QRect(61, 11, 54, 13))
        self.text_23.setObjectName("text_23")
        self.text_24 = QLabel(self.text_23)
        self.text_24.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.CustomButtonDownload0Strings.Disabled7Strings.TEXT_TEXT_24)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_24.setFont(font)
        self.text_24.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_24.setGeometry(QRect(0, 0, 54, 13))
        self.text_24.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_24.setMouseTracking(False)
        self.text_24.setContextMenuPolicy(Qt.NoContextMenu)
        def text_24_set_text(text:str):
            self.text_24.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.CustomButtonDownload0Controller.Disabled7Controller.text_24_set_text = text_24_set_text
        except NameError:
            print("No function text_24_set_text defined. Current text : " + self.text_24.text())
        except Exception as e:
            print("Caught exception while trying to call text_24_set_text : " + str(e))
        self.pressed_5 = QWidget(self.custom_button_download_0)
        self.pressed_5.setGeometry(QRect(0, 0, 177, 36))
        self.pressed_5.setObjectName("pressed_5")
        
        self.pressed_6 = QLabel(self.pressed_5)
        self.pressed_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_6 = QSvgWidget(self.pressed_6)
        self.q_svg_widget_pressed_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_6.load("svg/file40.svg")
        self.pressed_7 = QWidget(self.pressed_5)
        self.pressed_7.setGeometry(QRect(0, 0, 177, 36))
        self.pressed_7.setObjectName("pressed_7")
        self.text_25 = QWidget(self.pressed_7)
        self.text_25.setGeometry(QRect(61, 11, 54, 13))
        self.text_25.setObjectName("text_25")
        self.text_26 = QLabel(self.text_25)
        self.text_26.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.CustomButtonDownload0Strings.Pressed7Strings.TEXT_TEXT_26)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_26.setFont(font)
        self.text_26.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_26.setGeometry(QRect(0, 0, 54, 13))
        self.text_26.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_26.setMouseTracking(False)
        self.text_26.setContextMenuPolicy(Qt.NoContextMenu)
        def text_26_set_text(text:str):
            self.text_26.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.CustomButtonDownload0Controller.Pressed7Controller.text_26_set_text = text_26_set_text
        except NameError:
            print("No function text_26_set_text defined. Current text : " + self.text_26.text())
        except Exception as e:
            print("Caught exception while trying to call text_26_set_text : " + str(e))
        self.mouse_over_5 = QWidget(self.custom_button_download_0)
        self.mouse_over_5.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over_5.setObjectName("mouse_over_5")
        
        self.mouse_over_6 = QLabel(self.mouse_over_5)
        self.mouse_over_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_6 = QSvgWidget(self.mouse_over_6)
        self.q_svg_widget_mouse_over_6.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_6.load("svg/file41.svg")
        self.mouse_over_7 = QWidget(self.mouse_over_5)
        self.mouse_over_7.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over_7.setObjectName("mouse_over_7")
        self.text_27 = QWidget(self.mouse_over_7)
        self.text_27.setGeometry(QRect(61, 11, 54, 13))
        self.text_27.setObjectName("text_27")
        self.text_28 = QLabel(self.text_27)
        self.text_28.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.Download0Strings.CustomButtonDownload0Strings.MouseOver7Strings.TEXT_TEXT_28)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_28.setFont(font)
        self.text_28.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_28.setGeometry(QRect(0, 0, 54, 13))
        self.text_28.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_28.setMouseTracking(False)
        self.text_28.setContextMenuPolicy(Qt.NoContextMenu)
        def text_28_set_text(text:str):
            self.text_28.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.CustomButtonDownload0Controller.MouseOver7Controller.text_28_set_text = text_28_set_text
        except NameError:
            print("No function text_28_set_text defined. Current text : " + self.text_28.text())
        except Exception as e:
            print("Caught exception while trying to call text_28_set_text : " + str(e))
        
        self.custom_button_download_1 = QPushButton(self.custom_button_download)
        self.custom_button_download_1.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_download_1.setFlat(True)
        self.custom_button_download_1.setAutoFillBackground(False)
        self.custom_button_download_1.setObjectName("custom_button_download_1")
        self.custom_button_download_1.setMouseTracking(True)
        self.custom_button_download_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_button_download_1.setAcceptDrops(False)
        self.custom_button_download_1.setFocusPolicy(Qt.NoFocus)
        self.custom_button_download_1_enabled = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.Download0Config.CustomButtonDownload1Config.enabled
        def __custom_button_download_1_mouse_over(*args, **kwargs):
            if self.custom_button_download_1_enabled :
                self.mouse_over_5.setVisible(True)
                self.pressed_5.setVisible(False)
                self.disabled_5.setVisible(False)
        def __custom_button_download_1_mouse_leave(*args, **kwargs):
            if self.custom_button_download_1_enabled :
                self.mouse_over_5.setVisible(False)
                self.pressed_5.setVisible(False)
                self.disabled_5.setVisible(False)
        def __custom_button_download_1_mouse_press(*args, **kwargs):
            if self.custom_button_download_1_enabled :
                self.mouse_over_5.setVisible(False)
                self.pressed_5.setVisible(True)
                self.disabled_5.setVisible(False)
        def __custom_button_download_1_mouse_release(*args, **kwargs):
            if self.custom_button_download_1_enabled :
                self.mouse_over_5.setVisible(True)
                self.pressed_5.setVisible(False)
                self.disabled_5.setVisible(False)
                self.custom_button_download_1.clicked.emit()
        def __custom_button_download_1_disable(*args, **kwargs):
            self.custom_button_download_1_enabled = False
            self.mouse_over_5.setVisible(False)
            self.pressed_5.setVisible(False)
            self.disabled_5.setVisible(True)
            self.custom_button_download_1.setMouseTracking(False)
            self.custom_button_download_1.setFocusPolicy(Qt.NoFocus)
            self.custom_button_download_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        def __custom_button_download_1_enable(*args, **kwargs):
            self.custom_button_download_1_enabled = True
            self.mouse_over_5.setVisible(False)
            self.pressed_5.setVisible(False)
            self.disabled_5.setVisible(False)
            self.custom_button_download_1.setMouseTracking(True)
        
        def __custom_button_download_1_clicked(*args, **kwargs):
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.custom_button_download_1_clicked()
            except NameError:
                print("No function custom_button_download_1_clicked defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.Download0Handler.custom_button_download_1_clicked : " + str(e))
        
        self.custom_button_download_1.clicked.connect(__custom_button_download_1_clicked)
        self.custom_button_download_1.enterEvent = __custom_button_download_1_mouse_over
        self.custom_button_download_1.leaveEvent = __custom_button_download_1_mouse_leave
        self.custom_button_download_1.mousePressEvent = __custom_button_download_1_mouse_press
        self.custom_button_download_1.mouseReleaseEvent = __custom_button_download_1_mouse_release
        self.custom_button_download_1.disable = __custom_button_download_1_disable
        self.custom_button_download_1.enable = __custom_button_download_1_enable
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.custom_button_download_1_enable = __custom_button_download_1_enable
        except NameError:
            print("No function custom_button_download_1_enable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.custom_button_download_1_enable : " + str(e))
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.custom_button_download_1_disable = __custom_button_download_1_disable
        except NameError:
            print("No function custom_button_download_1_disable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.Download0Controller.custom_button_download_1_disable : " + str(e))
        self.mouse_over_5.setVisible(False)
        self.pressed_5.setVisible(False)
        self.disabled_5.setVisible(False)
        self.create_project = QWidget(self.tabs_content_0)
        self.create_project.setGeometry(QRect(2, 0, 332, 171))
        self.create_project.setObjectName("create_project")
        self.create_project_0 = QWidget(self.create_project)
        self.create_project_0.setGeometry(QRect(0, 0, 332, 171))
        self.create_project_0.setObjectName("create_project_0")
        self.custom_button_create_project = QWidget(self.create_project_0)
        self.custom_button_create_project.setGeometry(QRect(155, 135, 177, 36))
        self.custom_button_create_project.setObjectName("custom_button_create_project")
        self.custom_button_create_project_0 = QWidget(self.custom_button_create_project)
        self.custom_button_create_project_0.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_create_project_0.setObjectName("custom_button_create_project_0")
        self.normal_8 = QWidget(self.custom_button_create_project_0)
        self.normal_8.setGeometry(QRect(0, 0, 177, 36))
        self.normal_8.setObjectName("normal_8")
        
        self.normal_9 = QLabel(self.normal_8)
        self.normal_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_9 = QSvgWidget(self.normal_9)
        self.q_svg_widget_normal_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_normal_9.load("svg/file42.svg")
        self.normal_10 = QWidget(self.normal_8)
        self.normal_10.setGeometry(QRect(0, 0, 177, 36))
        self.normal_10.setObjectName("normal_10")
        self.text_29 = QWidget(self.normal_10)
        self.text_29.setGeometry(QRect(50, 11, 75, 13))
        self.text_29.setObjectName("text_29")
        self.text_30 = QLabel(self.text_29)
        self.text_30.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.CreateProject0Strings.CustomButtonCreateProject0Strings.Normal10Strings.TEXT_TEXT_30)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_30.setFont(font)
        self.text_30.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_30.setGeometry(QRect(0, 0, 75, 13))
        self.text_30.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_30.setMouseTracking(False)
        self.text_30.setContextMenuPolicy(Qt.NoContextMenu)
        def text_30_set_text(text:str):
            self.text_30.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.CustomButtonCreateProject0Controller.Normal10Controller.text_30_set_text = text_30_set_text
        except NameError:
            print("No function text_30_set_text defined. Current text : " + self.text_30.text())
        except Exception as e:
            print("Caught exception while trying to call text_30_set_text : " + str(e))
        self.disabled_8 = QWidget(self.custom_button_create_project_0)
        self.disabled_8.setGeometry(QRect(0, 0, 177, 36))
        self.disabled_8.setObjectName("disabled_8")
        
        self.disabled_9 = QLabel(self.disabled_8)
        self.disabled_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_9 = QSvgWidget(self.disabled_9)
        self.q_svg_widget_disabled_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_disabled_9.load("svg/file43.svg")
        self.disabled_10 = QWidget(self.disabled_8)
        self.disabled_10.setGeometry(QRect(0, 0, 177, 36))
        self.disabled_10.setObjectName("disabled_10")
        self.text_31 = QWidget(self.disabled_10)
        self.text_31.setGeometry(QRect(50, 11, 75, 13))
        self.text_31.setObjectName("text_31")
        self.text_32 = QLabel(self.text_31)
        self.text_32.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.CreateProject0Strings.CustomButtonCreateProject0Strings.Disabled10Strings.TEXT_TEXT_32)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_32.setFont(font)
        self.text_32.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_32.setGeometry(QRect(0, 0, 75, 13))
        self.text_32.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_32.setMouseTracking(False)
        self.text_32.setContextMenuPolicy(Qt.NoContextMenu)
        def text_32_set_text(text:str):
            self.text_32.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.CustomButtonCreateProject0Controller.Disabled10Controller.text_32_set_text = text_32_set_text
        except NameError:
            print("No function text_32_set_text defined. Current text : " + self.text_32.text())
        except Exception as e:
            print("Caught exception while trying to call text_32_set_text : " + str(e))
        self.pressed_8 = QWidget(self.custom_button_create_project_0)
        self.pressed_8.setGeometry(QRect(0, 0, 177, 36))
        self.pressed_8.setObjectName("pressed_8")
        
        self.pressed_9 = QLabel(self.pressed_8)
        self.pressed_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_9 = QSvgWidget(self.pressed_9)
        self.q_svg_widget_pressed_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_pressed_9.load("svg/file44.svg")
        self.pressed_10 = QWidget(self.pressed_8)
        self.pressed_10.setGeometry(QRect(0, 0, 177, 36))
        self.pressed_10.setObjectName("pressed_10")
        self.text_33 = QWidget(self.pressed_10)
        self.text_33.setGeometry(QRect(50, 11, 75, 13))
        self.text_33.setObjectName("text_33")
        self.text_34 = QLabel(self.text_33)
        self.text_34.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.CreateProject0Strings.CustomButtonCreateProject0Strings.Pressed10Strings.TEXT_TEXT_34)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_34.setFont(font)
        self.text_34.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_34.setGeometry(QRect(0, 0, 75, 13))
        self.text_34.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_34.setMouseTracking(False)
        self.text_34.setContextMenuPolicy(Qt.NoContextMenu)
        def text_34_set_text(text:str):
            self.text_34.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.CustomButtonCreateProject0Controller.Pressed10Controller.text_34_set_text = text_34_set_text
        except NameError:
            print("No function text_34_set_text defined. Current text : " + self.text_34.text())
        except Exception as e:
            print("Caught exception while trying to call text_34_set_text : " + str(e))
        self.mouse_over_8 = QWidget(self.custom_button_create_project_0)
        self.mouse_over_8.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over_8.setObjectName("mouse_over_8")
        
        self.mouse_over_9 = QLabel(self.mouse_over_8)
        self.mouse_over_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_9 = QSvgWidget(self.mouse_over_9)
        self.q_svg_widget_mouse_over_9.setGeometry(QRect(0, 0, 177, 36))
        self.q_svg_widget_mouse_over_9.load("svg/file45.svg")
        self.mouse_over_10 = QWidget(self.mouse_over_8)
        self.mouse_over_10.setGeometry(QRect(0, 0, 177, 36))
        self.mouse_over_10.setObjectName("mouse_over_10")
        self.text_35 = QWidget(self.mouse_over_10)
        self.text_35.setGeometry(QRect(50, 11, 75, 13))
        self.text_35.setObjectName("text_35")
        self.text_36 = QLabel(self.text_35)
        self.text_36.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.CreateProject0Strings.CustomButtonCreateProject0Strings.MouseOver10Strings.TEXT_TEXT_36)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_36.setFont(font)
        self.text_36.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_36.setGeometry(QRect(0, 0, 75, 13))
        self.text_36.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_36.setMouseTracking(False)
        self.text_36.setContextMenuPolicy(Qt.NoContextMenu)
        def text_36_set_text(text:str):
            self.text_36.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.CustomButtonCreateProject0Controller.MouseOver10Controller.text_36_set_text = text_36_set_text
        except NameError:
            print("No function text_36_set_text defined. Current text : " + self.text_36.text())
        except Exception as e:
            print("Caught exception while trying to call text_36_set_text : " + str(e))
        
        self.custom_button_create_project_1 = QPushButton(self.custom_button_create_project)
        self.custom_button_create_project_1.setGeometry(QRect(0, 0, 177, 36))
        self.custom_button_create_project_1.setFlat(True)
        self.custom_button_create_project_1.setAutoFillBackground(False)
        self.custom_button_create_project_1.setObjectName("custom_button_create_project_1")
        self.custom_button_create_project_1.setMouseTracking(True)
        self.custom_button_create_project_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_button_create_project_1.setAcceptDrops(False)
        self.custom_button_create_project_1.setFocusPolicy(Qt.NoFocus)
        self.custom_button_create_project_1_enabled = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.CreateProject0Config.CustomButtonCreateProject1Config.enabled
        def __custom_button_create_project_1_mouse_over(*args, **kwargs):
            if self.custom_button_create_project_1_enabled :
                self.mouse_over_8.setVisible(True)
                self.pressed_8.setVisible(False)
                self.disabled_8.setVisible(False)
        def __custom_button_create_project_1_mouse_leave(*args, **kwargs):
            if self.custom_button_create_project_1_enabled :
                self.mouse_over_8.setVisible(False)
                self.pressed_8.setVisible(False)
                self.disabled_8.setVisible(False)
        def __custom_button_create_project_1_mouse_press(*args, **kwargs):
            if self.custom_button_create_project_1_enabled :
                self.mouse_over_8.setVisible(False)
                self.pressed_8.setVisible(True)
                self.disabled_8.setVisible(False)
        def __custom_button_create_project_1_mouse_release(*args, **kwargs):
            if self.custom_button_create_project_1_enabled :
                self.mouse_over_8.setVisible(True)
                self.pressed_8.setVisible(False)
                self.disabled_8.setVisible(False)
                self.custom_button_create_project_1.clicked.emit()
        def __custom_button_create_project_1_disable(*args, **kwargs):
            self.custom_button_create_project_1_enabled = False
            self.mouse_over_8.setVisible(False)
            self.pressed_8.setVisible(False)
            self.disabled_8.setVisible(True)
            self.custom_button_create_project_1.setMouseTracking(False)
            self.custom_button_create_project_1.setFocusPolicy(Qt.NoFocus)
            self.custom_button_create_project_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        def __custom_button_create_project_1_enable(*args, **kwargs):
            self.custom_button_create_project_1_enabled = True
            self.mouse_over_8.setVisible(False)
            self.pressed_8.setVisible(False)
            self.disabled_8.setVisible(False)
            self.custom_button_create_project_1.setMouseTracking(True)
        
        def __custom_button_create_project_1_clicked(*args, **kwargs):
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.CreateProject0Handler.custom_button_create_project_1_clicked()
            except NameError:
                print("No function custom_button_create_project_1_clicked defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.CreateProject0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.CreateProject0Handler.custom_button_create_project_1_clicked : " + str(e))
        
        self.custom_button_create_project_1.clicked.connect(__custom_button_create_project_1_clicked)
        self.custom_button_create_project_1.enterEvent = __custom_button_create_project_1_mouse_over
        self.custom_button_create_project_1.leaveEvent = __custom_button_create_project_1_mouse_leave
        self.custom_button_create_project_1.mousePressEvent = __custom_button_create_project_1_mouse_press
        self.custom_button_create_project_1.mouseReleaseEvent = __custom_button_create_project_1_mouse_release
        self.custom_button_create_project_1.disable = __custom_button_create_project_1_disable
        self.custom_button_create_project_1.enable = __custom_button_create_project_1_enable
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.custom_button_create_project_1_enable = __custom_button_create_project_1_enable
        except NameError:
            print("No function custom_button_create_project_1_enable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.custom_button_create_project_1_enable : " + str(e))
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.custom_button_create_project_1_disable = __custom_button_create_project_1_disable
        except NameError:
            print("No function custom_button_create_project_1_disable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.custom_button_create_project_1_disable : " + str(e))
        self.mouse_over_8.setVisible(False)
        self.pressed_8.setVisible(False)
        self.disabled_8.setVisible(False)
        self.checkbox_clear_project_directory = QWidget(self.create_project_0)
        self.checkbox_clear_project_directory.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_clear_project_directory.setObjectName("checkbox_clear_project_directory")
        self.checkbox_clear_project_directory_0 = QWidget(self.checkbox_clear_project_directory)
        self.checkbox_clear_project_directory_0.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_clear_project_directory_0.setObjectName("checkbox_clear_project_directory_0")
        self.clear_project_directory = QWidget(self.checkbox_clear_project_directory_0)
        self.clear_project_directory.setGeometry(QRect(30, 3, 140, 13))
        self.clear_project_directory.setObjectName("clear_project_directory")
        self.clear_project_directory_0 = QLabel(self.clear_project_directory)
        self.clear_project_directory_0.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsContent0Strings.CreateProject0Strings.CheckboxClearProjectDirectory0Strings.TEXT_CLEAR_PROJECT_DIRECTORY_0)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.clear_project_directory_0.setFont(font)
        self.clear_project_directory_0.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.clear_project_directory_0.setGeometry(QRect(0, 0, 140, 13))
        self.clear_project_directory_0.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.clear_project_directory_0.setMouseTracking(False)
        self.clear_project_directory_0.setContextMenuPolicy(Qt.NoContextMenu)
        def clear_project_directory_0_set_text(text:str):
            self.clear_project_directory_0.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.CheckboxClearProjectDirectory0Controller.clear_project_directory_0_set_text = clear_project_directory_0_set_text
        except NameError:
            print("No function clear_project_directory_0_set_text defined. Current text : " + self.clear_project_directory_0.text())
        except Exception as e:
            print("Caught exception while trying to call clear_project_directory_0_set_text : " + str(e))
        self.rectangle_31_7 = QWidget(self.checkbox_clear_project_directory_0)
        self.rectangle_31_7.setGeometry(QRect(0, 0, 21, 21))
        self.rectangle_31_7.setObjectName("rectangle_31_7")
        
        self.rectangle_31_8 = QLabel(self.rectangle_31_7)
        self.rectangle_31_8.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_8 = QSvgWidget(self.rectangle_31_8)
        self.q_svg_widget_rectangle_31_8.setGeometry(QRect(0, 0, 21, 21))
        self.q_svg_widget_rectangle_31_8.load("svg/file46.svg")
        self.checked_11 = QWidget(self.checkbox_clear_project_directory_0)
        self.checked_11.setGeometry(QRect(3, 3, 13, 13))
        self.checked_11.setObjectName("checked_11")
        
        self.checked_12 = QLabel(self.checked_11)
        self.checked_12.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_12 = QSvgWidget(self.checked_12)
        self.q_svg_widget_checked_12.setGeometry(QRect(0, 0, 13, 13))
        self.q_svg_widget_checked_12.load("svg/file47.svg")
        self.checked_13 = QWidget(self.checked_11)
        self.checked_13.setGeometry(QRect(0, 0, 13, 13))
        self.checked_13.setObjectName("checked_13")
        self.path_5_copy_10_7 = QWidget(self.checked_13)
        self.path_5_copy_10_7.setGeometry(QRect(2, 2, 9, 9))
        self.path_5_copy_10_7.setObjectName("path_5_copy_10_7")
        
        self.path_5_copy_10_8 = QLabel(self.path_5_copy_10_7)
        self.path_5_copy_10_8.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_8 = QSvgWidget(self.path_5_copy_10_8)
        self.q_svg_widget_path_5_copy_10_8.setGeometry(QRect(0, 0, 9, 9))
        self.q_svg_widget_path_5_copy_10_8.load("svg/file48.svg")
        
        self.checkbox_clear_project_directory_1_checked = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.CreateProject0Config.CheckboxClearProjectDirectory1Config.default_checked
        self.checkbox_clear_project_directory_1 = QPushButton(self.checkbox_clear_project_directory)
        self.checkbox_clear_project_directory_1.setGeometry(QRect(0, 0, 171, 21))
        self.checkbox_clear_project_directory_1.setFlat(True)
        self.checkbox_clear_project_directory_1.setAutoFillBackground(False)
        self.checkbox_clear_project_directory_1.setObjectName("checkbox_clear_project_directory_1")
        self.checkbox_clear_project_directory_1.setMouseTracking(True)
        self.checkbox_clear_project_directory_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.checkbox_clear_project_directory_1.setAcceptDrops(False)
        self.checkbox_clear_project_directory_1.setFocusPolicy(Qt.NoFocus)
        self.checkbox_clear_project_directory_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        self.checkbox_clear_project_directory_1.setEnabled(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView0Config.TabsContent0Config.CreateProject0Config.CheckboxClearProjectDirectory1Config.enabled)
        def __checkbox_clear_project_directory_1_check_changed():
            self.checkbox_clear_project_directory_1_checked = not self.checkbox_clear_project_directory_1_checked
            self.checked_11.setVisible(self.checkbox_clear_project_directory_1_checked)
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.CreateProject0Handler.checkbox_clear_project_directory_1_check_changed(self.checkbox_clear_project_directory_1_checked)
            except NameError:
                print("No function checkbox_clear_project_directory_1_check_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.CreateProject0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.TabsView0Handler.TabsContent0Handler.CreateProject0Handler.checkbox_clear_project_directory_1_check_changed : " + str(e))
        
        def __checkbox_clear_project_directory_1_set_checked(checked:bool):
            self.checkbox_clear_project_directory_1_checked = checked
            self.checked_11.setVisible(self.checkbox_clear_project_directory_1_checked)
        self.checkbox_clear_project_directory_1.clicked.connect(__checkbox_clear_project_directory_1_check_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.checkbox_clear_project_directory_1_set_checked = __checkbox_clear_project_directory_1_set_checked
        except NameError:
            print("No function checkbox_clear_project_directory_1_set_checked defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsContent0Controller.CreateProject0Controller.checkbox_clear_project_directory_1_set_checked : " + str(e))
        self.checked_11.setVisible(self.checkbox_clear_project_directory_1_checked)
        self.tabs_bar = QWidget(self.tabs_view_0)
        self.tabs_bar.setGeometry(QRect(9, 8, 124, 124))
        self.tabs_bar.setObjectName("tabs_bar")
        self.tabs_bar_0 = QWidget(self.tabs_bar)
        self.tabs_bar_0.setGeometry(QRect(0, 0, 124, 124))
        self.tabs_bar_0.setObjectName("tabs_bar_0")
        self.run_1 = QWidget(self.tabs_bar_0)
        self.run_1.setGeometry(QRect(0, 99, 124, 25))
        self.run_1.setObjectName("run_1")
        
        self.run_2 = QLabel(self.run_1)
        self.run_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_run_2 = QSvgWidget(self.run_2)
        self.q_svg_widget_run_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_run_2.load("svg/file49.svg")
        self.run_3 = QWidget(self.run_1)
        self.run_3.setGeometry(QRect(0, 0, 124, 25))
        self.run_3.setObjectName("run_3")
        self.label_7 = QWidget(self.run_3)
        self.label_7.setGeometry(QRect(18, 4, 88, 18))
        self.label_7.setObjectName("label_7")
        self.label_8 = QLabel(self.label_7)
        self.label_8.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsBar0Strings.Run3Strings.TEXT_LABEL_8)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_8.setFont(font)
        self.label_8.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.label_8.setGeometry(QRect(0, 0, 88, 18))
        self.label_8.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_8.setMouseTracking(False)
        self.label_8.setContextMenuPolicy(Qt.NoContextMenu)
        def label_8_set_text(text:str):
            self.label_8.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsBar0Controller.Run3Controller.label_8_set_text = label_8_set_text
        except NameError:
            print("No function label_8_set_text defined. Current text : " + self.label_8.text())
        except Exception as e:
            print("Caught exception while trying to call label_8_set_text : " + str(e))
        self.rectangle_7 = QWidget(self.run_3)
        self.rectangle_7.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle_7.setObjectName("rectangle_7")
        
        self.rectangle_8 = QLabel(self.rectangle_7)
        self.rectangle_8.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_8 = QSvgWidget(self.rectangle_8)
        self.q_svg_widget_rectangle_8.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_8.load("svg/file50.svg")
        self._24px_progresscircle0 = QWidget(self.run_3)
        self._24px_progresscircle0.setGeometry(QRect(100, 3, 18, 18))
        self._24px_progresscircle0.setObjectName("_24px_progresscircle0")
        self._24px_progresscircle0_0 = QWidget(self.run_3)
        self._24px_progresscircle0_0.setGeometry(QRect(79, 3, 18, 18))
        self._24px_progresscircle0_0.setObjectName("_24px_progresscircle0_0")
        self.compile_1 = QWidget(self.tabs_bar_0)
        self.compile_1.setGeometry(QRect(0, 65, 124, 25))
        self.compile_1.setObjectName("compile_1")
        
        self.compile_2 = QLabel(self.compile_1)
        self.compile_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_compile_2 = QSvgWidget(self.compile_2)
        self.q_svg_widget_compile_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_compile_2.load("svg/file51.svg")
        self.compile_3 = QWidget(self.compile_1)
        self.compile_3.setGeometry(QRect(0, 0, 124, 25))
        self.compile_3.setObjectName("compile_3")
        self.label_9 = QWidget(self.compile_3)
        self.label_9.setGeometry(QRect(18, 4, 88, 18))
        self.label_9.setObjectName("label_9")
        self.label_10 = QLabel(self.label_9)
        self.label_10.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsBar0Strings.Compile3Strings.TEXT_LABEL_10)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_10.setFont(font)
        self.label_10.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.label_10.setGeometry(QRect(0, 0, 88, 18))
        self.label_10.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_10.setMouseTracking(False)
        self.label_10.setContextMenuPolicy(Qt.NoContextMenu)
        def label_10_set_text(text:str):
            self.label_10.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsBar0Controller.Compile3Controller.label_10_set_text = label_10_set_text
        except NameError:
            print("No function label_10_set_text defined. Current text : " + self.label_10.text())
        except Exception as e:
            print("Caught exception while trying to call label_10_set_text : " + str(e))
        self.rectangle_10 = QWidget(self.compile_3)
        self.rectangle_10.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle_10.setObjectName("rectangle_10")
        
        self.rectangle_11 = QLabel(self.rectangle_10)
        self.rectangle_11.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_11 = QSvgWidget(self.rectangle_11)
        self.q_svg_widget_rectangle_11.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_11.load("svg/file52.svg")
        self._24px_progresscircle0_1 = QWidget(self.compile_3)
        self._24px_progresscircle0_1.setGeometry(QRect(100, 3, 18, 18))
        self._24px_progresscircle0_1.setObjectName("_24px_progresscircle0_1")
        self._24px_progresscircle0_2 = QWidget(self.compile_3)
        self._24px_progresscircle0_2.setGeometry(QRect(79, 3, 18, 18))
        self._24px_progresscircle0_2.setObjectName("_24px_progresscircle0_2")
        self.download_1 = QWidget(self.tabs_bar_0)
        self.download_1.setGeometry(QRect(0, 32, 124, 25))
        self.download_1.setObjectName("download_1")
        
        self.download_2 = QLabel(self.download_1)
        self.download_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_download_2 = QSvgWidget(self.download_2)
        self.q_svg_widget_download_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_download_2.load("svg/file53.svg")
        self.download_3 = QWidget(self.download_1)
        self.download_3.setGeometry(QRect(0, 0, 124, 25))
        self.download_3.setObjectName("download_3")
        self.label_11 = QWidget(self.download_3)
        self.label_11.setGeometry(QRect(18, 4, 88, 18))
        self.label_11.setObjectName("label_11")
        self.label_12 = QLabel(self.label_11)
        self.label_12.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsBar0Strings.Download3Strings.TEXT_LABEL_12)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_12.setFont(font)
        self.label_12.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.label_12.setGeometry(QRect(0, 0, 88, 18))
        self.label_12.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_12.setMouseTracking(False)
        self.label_12.setContextMenuPolicy(Qt.NoContextMenu)
        def label_12_set_text(text:str):
            self.label_12.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsBar0Controller.Download3Controller.label_12_set_text = label_12_set_text
        except NameError:
            print("No function label_12_set_text defined. Current text : " + self.label_12.text())
        except Exception as e:
            print("Caught exception while trying to call label_12_set_text : " + str(e))
        self.rectangle_12 = QWidget(self.download_3)
        self.rectangle_12.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle_12.setObjectName("rectangle_12")
        
        self.rectangle_13 = QLabel(self.rectangle_12)
        self.rectangle_13.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_13 = QSvgWidget(self.rectangle_13)
        self.q_svg_widget_rectangle_13.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_13.load("svg/file54.svg")
        self._24px_progresscircle0_3 = QWidget(self.download_3)
        self._24px_progresscircle0_3.setGeometry(QRect(100, 3, 18, 18))
        self._24px_progresscircle0_3.setObjectName("_24px_progresscircle0_3")
        self._24px_progresscircle0_4 = QWidget(self.download_3)
        self._24px_progresscircle0_4.setGeometry(QRect(79, 3, 18, 18))
        self._24px_progresscircle0_4.setObjectName("_24px_progresscircle0_4")
        self.create_project_1 = QWidget(self.tabs_bar_0)
        self.create_project_1.setGeometry(QRect(0, 0, 124, 25))
        self.create_project_1.setObjectName("create_project_1")
        
        self.create_project_2 = QLabel(self.create_project_1)
        self.create_project_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_create_project_2 = QSvgWidget(self.create_project_2)
        self.q_svg_widget_create_project_2.setGeometry(QRect(0, 0, 124, 25))
        self.q_svg_widget_create_project_2.load("svg/file55.svg")
        self.create_project_3 = QWidget(self.create_project_1)
        self.create_project_3.setGeometry(QRect(0, 0, 124, 25))
        self.create_project_3.setObjectName("create_project_3")
        self.label_13 = QWidget(self.create_project_3)
        self.label_13.setGeometry(QRect(18, 4, 88, 18))
        self.label_13.setObjectName("label_13")
        self.label_14 = QLabel(self.label_13)
        self.label_14.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.TabsView0Strings.TabsBar0Strings.CreateProject3Strings.TEXT_LABEL_14)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.label_14.setGeometry(QRect(0, 0, 88, 18))
        self.label_14.setAlignment(Qt.AlignTop | Qt.AlignLeft)
        self.label_14.setMouseTracking(False)
        self.label_14.setContextMenuPolicy(Qt.NoContextMenu)
        def label_14_set_text(text:str):
            self.label_14.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.TabsView0Controller.TabsBar0Controller.CreateProject3Controller.label_14_set_text = label_14_set_text
        except NameError:
            print("No function label_14_set_text defined. Current text : " + self.label_14.text())
        except Exception as e:
            print("Caught exception while trying to call label_14_set_text : " + str(e))
        self.rectangle_14 = QWidget(self.create_project_3)
        self.rectangle_14.setGeometry(QRect(0, 0, 1, 25))
        self.rectangle_14.setObjectName("rectangle_14")
        
        self.rectangle_15 = QLabel(self.rectangle_14)
        self.rectangle_15.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_15 = QSvgWidget(self.rectangle_15)
        self.q_svg_widget_rectangle_15.setGeometry(QRect(0, 0, 1, 25))
        self.q_svg_widget_rectangle_15.load("svg/file56.svg")
        self._24px_progresscircle0_5 = QWidget(self.create_project_3)
        self._24px_progresscircle0_5.setGeometry(QRect(100, 3, 18, 18))
        self._24px_progresscircle0_5.setObjectName("_24px_progresscircle0_5")
        self._24px_progresscircle0_6 = QWidget(self.create_project_3)
        self._24px_progresscircle0_6.setGeometry(QRect(79, 3, 18, 18))
        self._24px_progresscircle0_6.setObjectName("_24px_progresscircle0_6")
        def __select_tab(i):
            self.create_project.setVisible(i == 0)
            self.create_project_1.setVisible(i == 0)
            self.download.setVisible(i == 1)
            self.download_1.setVisible(i == 1)
            self.compile.setVisible(i == 2)
            self.compile_1.setVisible(i == 2)
            self.run.setVisible(i == 3)
            self.run_1.setVisible(i == 3)
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.tabs_view_1_tab_changed(i)
            except NameError:
                print("No function tabs_view_1_tab_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.tabs_view_1_tab_changed : " + str(e))
        __select_tab_0 = lambda: __select_tab(0)
        __select_tab_1 = lambda: __select_tab(1)
        __select_tab_2 = lambda: __select_tab(2)
        __select_tab_3 = lambda: __select_tab(3)
        self.tabs_view_1 = QLabel(self.tabs_view)
        
        create_project_1_button = QPushButton(self.tabs_bar_0)
        create_project_1_button.setGeometry(QRect(0, 0, 124, 25))
        create_project_1_button.setFlat(True)
        create_project_1_button.setObjectName("create_project_1_button")
        create_project_1_button.setMouseTracking(True)
        create_project_1_button.setContextMenuPolicy(Qt.NoContextMenu)
        create_project_1_button.setAcceptDrops(False)
        create_project_1_button.setStyleSheet("background-color: rgba(255, 255, 255, 100);")
        create_project_1_button.clicked.connect(__select_tab_0)
        __select_tab(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView1Config.default_tab)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab = __select_tab
        except NameError:
            print("No function tabs_view_1_set_tab defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab : " + str(e))
        
        download_1_button = QPushButton(self.tabs_bar_0)
        download_1_button.setGeometry(QRect(0, 32, 124, 25))
        download_1_button.setFlat(True)
        download_1_button.setObjectName("download_1_button")
        download_1_button.setMouseTracking(True)
        download_1_button.setContextMenuPolicy(Qt.NoContextMenu)
        download_1_button.setAcceptDrops(False)
        download_1_button.setStyleSheet("background-color: rgba(255, 255, 255, 100);")
        download_1_button.clicked.connect(__select_tab_1)
        __select_tab(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView1Config.default_tab)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab = __select_tab
        except NameError:
            print("No function tabs_view_1_set_tab defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab : " + str(e))
        
        compile_1_button = QPushButton(self.tabs_bar_0)
        compile_1_button.setGeometry(QRect(0, 65, 124, 25))
        compile_1_button.setFlat(True)
        compile_1_button.setObjectName("compile_1_button")
        compile_1_button.setMouseTracking(True)
        compile_1_button.setContextMenuPolicy(Qt.NoContextMenu)
        compile_1_button.setAcceptDrops(False)
        compile_1_button.setStyleSheet("background-color: rgba(255, 255, 255, 100);")
        compile_1_button.clicked.connect(__select_tab_2)
        __select_tab(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView1Config.default_tab)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab = __select_tab
        except NameError:
            print("No function tabs_view_1_set_tab defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab : " + str(e))
        
        run_1_button = QPushButton(self.tabs_bar_0)
        run_1_button.setGeometry(QRect(0, 99, 124, 25))
        run_1_button.setFlat(True)
        run_1_button.setObjectName("run_1_button")
        run_1_button.setMouseTracking(True)
        run_1_button.setContextMenuPolicy(Qt.NoContextMenu)
        run_1_button.setAcceptDrops(False)
        run_1_button.setStyleSheet("background-color: rgba(255, 255, 255, 100);")
        run_1_button.clicked.connect(__select_tab_3)
        __select_tab(ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.TabsView1Config.default_tab)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab = __select_tab
        except NameError:
            print("No function tabs_view_1_set_tab defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.tabs_view_1_set_tab : " + str(e))
        self.group_text_field_project_directory = QWidget(self.pyqt_figma_designer_gui_v4_2)
        self.group_text_field_project_directory.setGeometry(QRect(170, 73, 463, 36))
        self.group_text_field_project_directory.setObjectName("group_text_field_project_directory")
        self.group_text_field_project_directory_0 = QWidget(self.group_text_field_project_directory)
        self.group_text_field_project_directory_0.setGeometry(QRect(0, 0, 463, 36))
        self.group_text_field_project_directory_0.setObjectName("group_text_field_project_directory_0")
        self.inset_5 = QWidget(self.group_text_field_project_directory_0)
        self.inset_5.setGeometry(QRect(0, 0, 320, 33))
        self.inset_5.setObjectName("inset_5")
        
        self.inset_6 = QLabel(self.inset_5)
        self.inset_6.setGeometry(QRect(0, 0, 320, 33))
        self.q_svg_widget_inset_6 = QSvgWidget(self.inset_6)
        self.q_svg_widget_inset_6.setGeometry(QRect(0, 0, 320, 33))
        self.q_svg_widget_inset_6.load("svg/file57.svg")
        self.inset_7 = QWidget(self.inset_5)
        self.inset_7.setGeometry(QRect(0, 0, 320, 33))
        self.inset_7.setObjectName("inset_7")
        self.label_and_value_1 = QWidget(self.inset_7)
        self.label_and_value_1.setGeometry(QRect(12, 0, 258, 33))
        self.label_and_value_1.setObjectName("label_and_value_1")
        self.title_3 = QWidget(self.group_text_field_project_directory_0)
        self.title_3.setGeometry(QRect(16, 8, 140, 16))
        self.title_3.setObjectName("title_3")
        self.title_4 = QLabel(self.title_3)
        self.title_4.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTextFieldProjectDirectory0Strings.TEXT_TITLE_4)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.title_4.setFont(font)
        self.title_4.setStyleSheet("color: rgba(0.0, 0.0, 0.0, 255.0)")
        self.title_4.setGeometry(QRect(0, 0, 140, 16))
        self.title_4.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.title_4.setMouseTracking(False)
        self.title_4.setContextMenuPolicy(Qt.NoContextMenu)
        def title_4_set_text(text:str):
            self.title_4.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.title_4_set_text = title_4_set_text
        except NameError:
            print("No function title_4_set_text defined. Current text : " + self.title_4.text())
        except Exception as e:
            print("Caught exception while trying to call title_4_set_text : " + str(e))
        self.custom_text_field_directory = QWidget(self.group_text_field_project_directory_0)
        self.custom_text_field_directory.setGeometry(QRect(116, 0, 206, 33))
        self.custom_text_field_directory.setObjectName("custom_text_field_directory")
        self.custom_text_field_directory_0 = QWidget(self.custom_text_field_directory)
        self.custom_text_field_directory_0.setGeometry(QRect(0, 0, 206, 33))
        self.custom_text_field_directory_0.setObjectName("custom_text_field_directory_0")
        self.background_5 = QWidget(self.custom_text_field_directory_0)
        self.background_5.setGeometry(QRect(0, 0, 206, 33))
        self.background_5.setObjectName("background_5")
        self.bounds_1 = QWidget(self.custom_text_field_directory_0)
        self.bounds_1.setGeometry(QRect(0, 8, 195, 16))
        self.bounds_1.setObjectName("bounds_1")
        self.hint_3 = QWidget(self.custom_text_field_directory_0)
        self.hint_3.setGeometry(QRect(5, 8, 195, 16))
        self.hint_3.setObjectName("hint_3")
        self.hint_4 = QLabel(self.hint_3)
        self.hint_4.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTextFieldProjectDirectory0Strings.CustomTextFieldDirectory0Strings.TEXT_HINT_4)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.hint_4.setFont(font)
        self.hint_4.setStyleSheet("color: rgba(60.00000022351742, 60.00000022351742, 67.00000360608101, 255.0)")
        self.hint_4.setGeometry(QRect(0, 0, 195, 16))
        self.hint_4.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.hint_4.setMouseTracking(False)
        self.hint_4.setContextMenuPolicy(Qt.NoContextMenu)
        def hint_4_set_text(text:str):
            self.hint_4.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.CustomTextFieldDirectory0Controller.hint_4_set_text = hint_4_set_text
        except NameError:
            print("No function hint_4_set_text defined. Current text : " + self.hint_4.text())
        except Exception as e:
            print("Caught exception while trying to call hint_4_set_text : " + str(e))
        self.text_37 = QWidget(self.custom_text_field_directory_0)
        self.text_37.setGeometry(QRect(0, 8, 195, 16))
        self.text_37.setObjectName("text_37")
        self.text_38 = QLabel(self.text_37)
        self.text_38.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTextFieldProjectDirectory0Strings.CustomTextFieldDirectory0Strings.TEXT_TEXT_38)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_38.setFont(font)
        self.text_38.setStyleSheet("color: rgba(105.8958412706852, 105.8958412706852, 105.8958412706852, 255.0)")
        self.text_38.setGeometry(QRect(0, 0, 195, 16))
        self.text_38.setAlignment(Qt.AlignVCenter | Qt.AlignLeft)
        self.text_38.setMouseTracking(False)
        self.text_38.setContextMenuPolicy(Qt.NoContextMenu)
        def text_38_set_text(text:str):
            self.text_38.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.CustomTextFieldDirectory0Controller.text_38_set_text = text_38_set_text
        except NameError:
            print("No function text_38_set_text defined. Current text : " + self.text_38.text())
        except Exception as e:
            print("Caught exception while trying to call text_38_set_text : " + str(e))
        
        self.custom_text_field_directory_1 = QLineEdit(self.custom_text_field_directory)
        self.custom_text_field_directory_1.setGeometry(QRect(0, 8, 195, 16))
        self.custom_text_field_directory_1.setAutoFillBackground(False)
        self.custom_text_field_directory_1.setObjectName("custom_text_field_directory_1")
        self.custom_text_field_directory_1.setMouseTracking(True)
        self.custom_text_field_directory_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_text_field_directory_1.setAcceptDrops(False)
        self.custom_text_field_directory_1.setFont(self.text_38.font())
        text_color = self.text_38.styleSheet().split("color: ")[1].split(";")[0]
        self.text_38.setStyleSheet("color: rgba(255, 255, 255, 0);")
        self.text_38.hide()
        self.custom_text_field_directory_1.setStyleSheet("color: " + text_color + "; background-color: rgba(255, 255, 255, 0); border: 0px solid rgba(255, 255, 255, 0);")
        
        def __custom_text_field_directory_1_text_changed(*args, **kwargs):    
            if self.custom_text_field_directory_1.text() == "" :
                self.hint_4.show()
            else :
                self.hint_4.hide()
                text_38_set_text(self.custom_text_field_directory_1.text())              
                   
            current_text = self.custom_text_field_directory_1.text()
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.GroupTextFieldProjectDirectory0Handler.custom_text_field_directory_1_text_changed(current_text)
            except NameError:
                print("No function custom_text_field_directory_1_text_changed defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.GroupTextFieldProjectDirectory0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.GroupTextFieldProjectDirectory0Handler.custom_text_field_directory_1_text_changed : " + str(e))
        
        __custom_text_field_directory_1_text_changed()   
        self.custom_text_field_directory_1.textChanged.connect(__custom_text_field_directory_1_text_changed)
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.custom_text_field_directory_1_set_text = self.custom_text_field_directory_1.setText
        except NameError:
            print("No function custom_text_field_directory_1_set_text defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.custom_text_field_directory_1_set_text : " + str(e))
        self.custom_button_browse = QWidget(self.group_text_field_project_directory_0)
        self.custom_button_browse.setGeometry(QRect(333, 0, 130, 36))
        self.custom_button_browse.setObjectName("custom_button_browse")
        self.custom_button_browse_0 = QWidget(self.custom_button_browse)
        self.custom_button_browse_0.setGeometry(QRect(0, 0, 130, 36))
        self.custom_button_browse_0.setObjectName("custom_button_browse_0")
        self.normal_11 = QWidget(self.custom_button_browse_0)
        self.normal_11.setGeometry(QRect(0, 0, 130, 36))
        self.normal_11.setObjectName("normal_11")
        
        self.normal_12 = QLabel(self.normal_11)
        self.normal_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_normal_12 = QSvgWidget(self.normal_12)
        self.q_svg_widget_normal_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_normal_12.load("svg/file58.svg")
        self.normal_13 = QWidget(self.normal_11)
        self.normal_13.setGeometry(QRect(0, 0, 130, 36))
        self.normal_13.setObjectName("normal_13")
        self.text_39 = QWidget(self.normal_13)
        self.text_39.setGeometry(QRect(45, 11, 40, 13))
        self.text_39.setObjectName("text_39")
        self.text_40 = QLabel(self.text_39)
        self.text_40.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTextFieldProjectDirectory0Strings.CustomButtonBrowse0Strings.Normal13Strings.TEXT_TEXT_40)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_40.setFont(font)
        self.text_40.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_40.setGeometry(QRect(0, 0, 40, 13))
        self.text_40.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_40.setMouseTracking(False)
        self.text_40.setContextMenuPolicy(Qt.NoContextMenu)
        def text_40_set_text(text:str):
            self.text_40.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.CustomButtonBrowse0Controller.Normal13Controller.text_40_set_text = text_40_set_text
        except NameError:
            print("No function text_40_set_text defined. Current text : " + self.text_40.text())
        except Exception as e:
            print("Caught exception while trying to call text_40_set_text : " + str(e))
        self.disabled_11 = QWidget(self.custom_button_browse_0)
        self.disabled_11.setGeometry(QRect(0, 0, 130, 36))
        self.disabled_11.setObjectName("disabled_11")
        
        self.disabled_12 = QLabel(self.disabled_11)
        self.disabled_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_disabled_12 = QSvgWidget(self.disabled_12)
        self.q_svg_widget_disabled_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_disabled_12.load("svg/file59.svg")
        self.disabled_13 = QWidget(self.disabled_11)
        self.disabled_13.setGeometry(QRect(0, 0, 130, 36))
        self.disabled_13.setObjectName("disabled_13")
        self.text_41 = QWidget(self.disabled_13)
        self.text_41.setGeometry(QRect(45, 11, 40, 13))
        self.text_41.setObjectName("text_41")
        self.text_42 = QLabel(self.text_41)
        self.text_42.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTextFieldProjectDirectory0Strings.CustomButtonBrowse0Strings.Disabled13Strings.TEXT_TEXT_42)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_42.setFont(font)
        self.text_42.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_42.setGeometry(QRect(0, 0, 40, 13))
        self.text_42.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_42.setMouseTracking(False)
        self.text_42.setContextMenuPolicy(Qt.NoContextMenu)
        def text_42_set_text(text:str):
            self.text_42.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.CustomButtonBrowse0Controller.Disabled13Controller.text_42_set_text = text_42_set_text
        except NameError:
            print("No function text_42_set_text defined. Current text : " + self.text_42.text())
        except Exception as e:
            print("Caught exception while trying to call text_42_set_text : " + str(e))
        self.pressed_11 = QWidget(self.custom_button_browse_0)
        self.pressed_11.setGeometry(QRect(0, 0, 130, 36))
        self.pressed_11.setObjectName("pressed_11")
        
        self.pressed_12 = QLabel(self.pressed_11)
        self.pressed_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_pressed_12 = QSvgWidget(self.pressed_12)
        self.q_svg_widget_pressed_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_pressed_12.load("svg/file60.svg")
        self.pressed_13 = QWidget(self.pressed_11)
        self.pressed_13.setGeometry(QRect(0, 0, 130, 36))
        self.pressed_13.setObjectName("pressed_13")
        self.text_43 = QWidget(self.pressed_13)
        self.text_43.setGeometry(QRect(45, 11, 40, 13))
        self.text_43.setObjectName("text_43")
        self.text_44 = QLabel(self.text_43)
        self.text_44.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTextFieldProjectDirectory0Strings.CustomButtonBrowse0Strings.Pressed13Strings.TEXT_TEXT_44)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_44.setFont(font)
        self.text_44.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_44.setGeometry(QRect(0, 0, 40, 13))
        self.text_44.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_44.setMouseTracking(False)
        self.text_44.setContextMenuPolicy(Qt.NoContextMenu)
        def text_44_set_text(text:str):
            self.text_44.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.CustomButtonBrowse0Controller.Pressed13Controller.text_44_set_text = text_44_set_text
        except NameError:
            print("No function text_44_set_text defined. Current text : " + self.text_44.text())
        except Exception as e:
            print("Caught exception while trying to call text_44_set_text : " + str(e))
        self.mouse_over_11 = QWidget(self.custom_button_browse_0)
        self.mouse_over_11.setGeometry(QRect(0, 0, 130, 36))
        self.mouse_over_11.setObjectName("mouse_over_11")
        
        self.mouse_over_12 = QLabel(self.mouse_over_11)
        self.mouse_over_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_mouse_over_12 = QSvgWidget(self.mouse_over_12)
        self.q_svg_widget_mouse_over_12.setGeometry(QRect(0, 0, 130, 36))
        self.q_svg_widget_mouse_over_12.load("svg/file61.svg")
        self.mouse_over_13 = QWidget(self.mouse_over_11)
        self.mouse_over_13.setGeometry(QRect(0, 0, 130, 36))
        self.mouse_over_13.setObjectName("mouse_over_13")
        self.text_45 = QWidget(self.mouse_over_13)
        self.text_45.setGeometry(QRect(45, 11, 40, 13))
        self.text_45.setObjectName("text_45")
        self.text_46 = QLabel(self.text_45)
        self.text_46.setText(
            strings.PyqtFigmaDesignerGuiV4Strings.PyqtFigmaDesignerGuiV42Strings.GroupTextFieldProjectDirectory0Strings.CustomButtonBrowse0Strings.MouseOver13Strings.TEXT_TEXT_46)
        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        self.text_46.setFont(font)
        self.text_46.setStyleSheet("color: rgba(255.0, 255.0, 255.0, 255.0)")
        self.text_46.setGeometry(QRect(0, 0, 40, 13))
        self.text_46.setAlignment(Qt.AlignTop | Qt.AlignHCenter)
        self.text_46.setMouseTracking(False)
        self.text_46.setContextMenuPolicy(Qt.NoContextMenu)
        def text_46_set_text(text:str):
            self.text_46.setText(text)
        
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.CustomButtonBrowse0Controller.MouseOver13Controller.text_46_set_text = text_46_set_text
        except NameError:
            print("No function text_46_set_text defined. Current text : " + self.text_46.text())
        except Exception as e:
            print("Caught exception while trying to call text_46_set_text : " + str(e))
        
        self.custom_button_browse_1 = QPushButton(self.custom_button_browse)
        self.custom_button_browse_1.setGeometry(QRect(0, 0, 130, 36))
        self.custom_button_browse_1.setFlat(True)
        self.custom_button_browse_1.setAutoFillBackground(False)
        self.custom_button_browse_1.setObjectName("custom_button_browse_1")
        self.custom_button_browse_1.setMouseTracking(True)
        self.custom_button_browse_1.setContextMenuPolicy(Qt.NoContextMenu)
        self.custom_button_browse_1.setAcceptDrops(False)
        self.custom_button_browse_1.setFocusPolicy(Qt.NoFocus)
        self.custom_button_browse_1_enabled = ComponentsConfig.PyqtFigmaDesignerGuiV4Config.PyqtFigmaDesignerGuiV42Config.GroupTextFieldProjectDirectory0Config.CustomButtonBrowse1Config.enabled
        def __custom_button_browse_1_mouse_over(*args, **kwargs):
            if self.custom_button_browse_1_enabled :
                self.mouse_over_11.setVisible(True)
                self.pressed_11.setVisible(False)
                self.disabled_11.setVisible(False)
        def __custom_button_browse_1_mouse_leave(*args, **kwargs):
            if self.custom_button_browse_1_enabled :
                self.mouse_over_11.setVisible(False)
                self.pressed_11.setVisible(False)
                self.disabled_11.setVisible(False)
        def __custom_button_browse_1_mouse_press(*args, **kwargs):
            if self.custom_button_browse_1_enabled :
                self.mouse_over_11.setVisible(False)
                self.pressed_11.setVisible(True)
                self.disabled_11.setVisible(False)
        def __custom_button_browse_1_mouse_release(*args, **kwargs):
            if self.custom_button_browse_1_enabled :
                self.mouse_over_11.setVisible(True)
                self.pressed_11.setVisible(False)
                self.disabled_11.setVisible(False)
                self.custom_button_browse_1.clicked.emit()
        def __custom_button_browse_1_disable(*args, **kwargs):
            self.custom_button_browse_1_enabled = False
            self.mouse_over_11.setVisible(False)
            self.pressed_11.setVisible(False)
            self.disabled_11.setVisible(True)
            self.custom_button_browse_1.setMouseTracking(False)
            self.custom_button_browse_1.setFocusPolicy(Qt.NoFocus)
            self.custom_button_browse_1.setStyleSheet("background-color: rgba(255, 255, 255, 0);")
        def __custom_button_browse_1_enable(*args, **kwargs):
            self.custom_button_browse_1_enabled = True
            self.mouse_over_11.setVisible(False)
            self.pressed_11.setVisible(False)
            self.disabled_11.setVisible(False)
            self.custom_button_browse_1.setMouseTracking(True)
        
        def __custom_button_browse_1_clicked(*args, **kwargs):
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.GroupTextFieldProjectDirectory0Handler.custom_button_browse_1_clicked()
            except NameError:
                print("No function custom_button_browse_1_clicked defined in class PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.GroupTextFieldProjectDirectory0Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.PyqtFigmaDesignerGuiV42Handler.GroupTextFieldProjectDirectory0Handler.custom_button_browse_1_clicked : " + str(e))
        
        self.custom_button_browse_1.clicked.connect(__custom_button_browse_1_clicked)
        self.custom_button_browse_1.enterEvent = __custom_button_browse_1_mouse_over
        self.custom_button_browse_1.leaveEvent = __custom_button_browse_1_mouse_leave
        self.custom_button_browse_1.mousePressEvent = __custom_button_browse_1_mouse_press
        self.custom_button_browse_1.mouseReleaseEvent = __custom_button_browse_1_mouse_release
        self.custom_button_browse_1.disable = __custom_button_browse_1_disable
        self.custom_button_browse_1.enable = __custom_button_browse_1_enable
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.custom_button_browse_1_enable = __custom_button_browse_1_enable
        except NameError:
            print("No function custom_button_browse_1_enable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.custom_button_browse_1_enable : " + str(e))
        try :
            GuiController.PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.custom_button_browse_1_disable = __custom_button_browse_1_disable
        except NameError:
            print("No function custom_button_browse_1_disable defined in class PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller")
        except Exception as e:
            print("Caught exception while trying to set the function PyqtFigmaDesignerGuiV4Controller.PyqtFigmaDesignerGuiV42Controller.GroupTextFieldProjectDirectory0Controller.custom_button_browse_1_disable : " + str(e))
        self.mouse_over_11.setVisible(False)
        self.pressed_11.setVisible(False)
        self.disabled_11.setVisible(False)
        self.pyqt_figma_designer_logoremovebgpreview_1 = QWidget(self.pyqt_figma_designer_gui_v4_2)
        self.pyqt_figma_designer_logoremovebgpreview_1.setGeometry(QRect(9, 0, 62, 62))
        self.pyqt_figma_designer_logoremovebgpreview_1.setObjectName("pyqt_figma_designer_logoremovebgpreview_1")
        
        self.pyqt_figma_designer_logoremovebgpreview_1_0 = QLabel(self.pyqt_figma_designer_logoremovebgpreview_1)
        self.pyqt_figma_designer_logoremovebgpreview_1_0.setGeometry(QRect(0, 0, 62, 62))
        self.q_svg_widget_pyqt_figma_designer_logoremovebgpreview_1_0 = QSvgWidget(self.pyqt_figma_designer_logoremovebgpreview_1_0)
        self.q_svg_widget_pyqt_figma_designer_logoremovebgpreview_1_0.setGeometry(QRect(0, 0, 62, 62))
        self.q_svg_widget_pyqt_figma_designer_logoremovebgpreview_1_0.load("svg/file62.svg")
        MainWindow.setCentralWidget(self.pyqt_figma_designer_gui_v4)
        try :
            GuiHandler.PyqtFigmaDesignerGuiV4Handler.window_started()
        except NameError:
            print("No function window_started defined in class PyqtFigmaDesignerGuiV4Handler")
        except Exception as e:
            print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.window_started : " + str(e))
        def __window_closed(*args, **kwargs):
            try :
                GuiHandler.PyqtFigmaDesignerGuiV4Handler.window_closed()
            except NameError:
                print("No function window_closed defined in class PyqtFigmaDesignerGuiV4Handler")
            except Exception as e:
                print("Caught exception while trying to call PyqtFigmaDesignerGuiV4Handler.window_closed : " + str(e))
        MainWindow.closeEvent = __window_closed
import sys

app = QApplication(sys.argv)
MainWindow = QMainWindow()
ui = QWindowPyqtFigmaDesignerGuiV4()
ui.setupUi(MainWindow)
MainWindow.show()
app.exec()