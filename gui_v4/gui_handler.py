"""
This file was generated by PyQT figma designer
You can edit it but be careful to not overwrite it afterward.
Each function is connected to a specific event of a specific widget in the GUI.
"""

# imports
from PySide6.QtCore import *
from PySide6.QtGui import *
from PySide6.QtWidgets import *
from gui_controller import *
import model


class PyqtFigmaDesignerGuiV4Handler:

    @classmethod
    def window_started(cls):
        model.load_config()
        model.update_ui()

    @classmethod
    def window_closed(cls):
        model.save_config()

    class PyqtFigmaDesignerGuiV42Handler:
        class TabsView0Handler:
            class TabsContent0Handler:
                class Run0Handler:

                    @classmethod
                    def custom_button_run_1_clicked(cls):
                        model.run_project()

                class Compile0Handler:

                    @classmethod
                    def checkbox_overwrite_handlers_1_check_changed(cls, checked: bool):
                        model.overwrite_handlers = checked

                    @classmethod
                    def checkbox_overwrite_config_1_check_changed(cls, checked: bool):
                        model.overwrite_config = checked

                    @classmethod
                    def checkbox_overwrite_strings_1_check_changed(cls, checked: bool):
                        model.overwrite_strings = checked

                    class GroupSliderScale0Handler:

                        @classmethod
                        def slider_scale_1_value_changed(cls, value: float):
                            model.scale = model.slider_to_scale(value, model.scale_min, model.scale_max)
                            model.update_ui()

                    class GroupSliderTextScale0Handler:

                        @classmethod
                        def slider_scale_4_value_changed(cls, value: float):
                            model.text_scale = model.slider_to_scale(value, model.text_scale_min, model.text_scale_max)
                            model.update_ui()

                    @classmethod
                    def custom_button_compile_1_clicked(cls):
                        model.compile_project()

                class Download0Handler:
                    class GroupTextFieldFigmaToken0Handler:

                        @classmethod
                        def custom_text_field_figma_token_1_text_changed(cls, text: str):
                            model.figma_token = text

                    class GroupTextFieldFigmaToken2Handler:

                        @classmethod
                        def custom_text_field_figma_token_4_text_changed(cls, text: str):
                            model.figma_file_url = text

                    @classmethod
                    def checkbox_skip_images_1_check_changed(cls, checked: bool):
                        model.skip_images = checked

                    @classmethod
                    def custom_button_download_1_clicked(cls):
                        model.download_figma_file()

                class CreateProject0Handler:

                    @classmethod
                    def custom_button_create_project_1_clicked(cls):
                        model.create_project()

                    @classmethod
                    def checkbox_clear_project_directory_1_check_changed(cls, checked: bool):
                        model.clear_project = checked

        @classmethod
        def tabs_view_1_tab_changed(cls, tab: int):
            if tab == model.tab:
                return
            model.tab = tab

        class GroupTextFieldProjectDirectory0Handler:

            @classmethod
            def custom_text_field_directory_1_text_changed(cls, text: str):
                model.project_directory = text

            @classmethod
            def custom_button_browse_1_clicked(cls):
                model.browse_directory()
